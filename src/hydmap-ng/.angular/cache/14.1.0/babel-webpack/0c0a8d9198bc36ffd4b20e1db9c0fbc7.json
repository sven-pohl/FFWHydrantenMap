{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, Directive, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\n\nconst _c0 = [\"*\"];\n\nclass MapEventManager {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n    /** Pending listeners that were added before the target was set. */\n\n    this._pending = [];\n    this._listeners = [];\n    this._targetStream = new BehaviorSubject(undefined);\n  }\n  /** Clears all currently-registered event listeners. */\n\n\n  _clearListeners() {\n    for (const listener of this._listeners) {\n      listener.remove();\n    }\n\n    this._listeners = [];\n  }\n  /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n\n\n  getLazyEmitter(name) {\n    return this._targetStream.pipe(switchMap(target => {\n      const observable = new Observable(observer => {\n        // If the target hasn't been initialized yet, cache the observer so it can be added later.\n        if (!target) {\n          this._pending.push({\n            observable,\n            observer\n          });\n\n          return undefined;\n        }\n\n        const listener = target.addListener(name, event => {\n          this._ngZone.run(() => observer.next(event));\n        });\n\n        this._listeners.push(listener);\n\n        return () => listener.remove();\n      });\n      return observable;\n    }));\n  }\n  /** Sets the current target that the manager should bind events to. */\n\n\n  setTarget(target) {\n    const currentTarget = this._targetStream.value;\n\n    if (target === currentTarget) {\n      return;\n    } // Clear the listeners from the pre-existing target.\n\n\n    if (currentTarget) {\n      this._clearListeners();\n\n      this._pending = [];\n    }\n\n    this._targetStream.next(target); // Add the listeners that were bound before the map was initialized.\n\n\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n\n    this._pending = [];\n  }\n  /** Destroys the manager and clears the event listeners. */\n\n\n  destroy() {\n    this._clearListeners();\n\n    this._pending = [];\n\n    this._targetStream.complete();\n  }\n\n} /// <reference types=\"google.maps\" />\n\n/** default options set to the Googleplex */\n\n\nconst DEFAULT_OPTIONS = {\n  center: {\n    lat: 37.421995,\n    lng: -122.084092\n  },\n  zoom: 17,\n  // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n  mapTypeId: 'roadmap'\n};\n/** Arbitrary default height for the map element */\n\nconst DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\n\nconst DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\n\nclass GoogleMap {\n  constructor(_elementRef, _ngZone, platformId) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n\n    this.height = DEFAULT_HEIGHT;\n    /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n\n    this.width = DEFAULT_WIDTH;\n    this._options = DEFAULT_OPTIONS;\n    /** Event emitted when the map is initialized. */\n\n    this.mapInitialized = new EventEmitter();\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n     */\n\n    this.authFailure = new EventEmitter();\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n     */\n\n    this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n     */\n\n    this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n     */\n\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n     */\n\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n     */\n\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n     */\n\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n     */\n\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n     */\n\n    this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n     */\n\n    this.idle = this._eventManager.getLazyEmitter('idle');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n     */\n\n    this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n     */\n\n    this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n     */\n\n    this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n     */\n\n    this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n     */\n\n    this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n     */\n\n    this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n     */\n\n    this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n     */\n\n    this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n     */\n\n    this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n    this._isBrowser = isPlatformBrowser(platformId);\n\n    if (this._isBrowser) {\n      const googleMapsWindow = window;\n\n      if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Namespace google not found, cannot construct embedded google ' + 'map. Please install the Google Maps JavaScript API: ' + 'https://developers.google.com/maps/documentation/javascript/' + 'tutorial#Loading_the_Maps_API');\n      }\n\n      this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n\n      googleMapsWindow.gm_authFailure = () => {\n        if (this._existingAuthFailureCallback) {\n          this._existingAuthFailureCallback();\n        }\n\n        this.authFailure.emit();\n      };\n    }\n  }\n\n  set center(center) {\n    this._center = center;\n  }\n\n  set zoom(zoom) {\n    this._zoom = zoom;\n  }\n\n  set options(options) {\n    this._options = options || DEFAULT_OPTIONS;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['height'] || changes['width']) {\n      this._setSize();\n    }\n\n    const googleMap = this.googleMap;\n\n    if (googleMap) {\n      if (changes['options']) {\n        googleMap.setOptions(this._combineOptions());\n      }\n\n      if (changes['center'] && this._center) {\n        googleMap.setCenter(this._center);\n      } // Note that the zoom can be zero.\n\n\n      if (changes['zoom'] && this._zoom != null) {\n        googleMap.setZoom(this._zoom);\n      }\n\n      if (changes['mapTypeId'] && this.mapTypeId) {\n        googleMap.setMapTypeId(this.mapTypeId);\n      }\n    }\n  }\n\n  ngOnInit() {\n    // It should be a noop during server-side rendering.\n    if (this._isBrowser) {\n      this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n\n      this._setSize(); // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n\n\n      this._ngZone.runOutsideAngular(() => {\n        this.googleMap = new google.maps.Map(this._mapEl, this._combineOptions());\n      });\n\n      this._eventManager.setTarget(this.googleMap);\n\n      this.mapInitialized.emit(this.googleMap);\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    if (this._isBrowser) {\n      const googleMapsWindow = window;\n      googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n    }\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n   */\n\n\n  fitBounds(bounds, padding) {\n    this._assertInitialized();\n\n    this.googleMap.fitBounds(bounds, padding);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n   */\n\n\n  panBy(x, y) {\n    this._assertInitialized();\n\n    this.googleMap.panBy(x, y);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n   */\n\n\n  panTo(latLng) {\n    this._assertInitialized();\n\n    this.googleMap.panTo(latLng);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n   */\n\n\n  panToBounds(latLngBounds, padding) {\n    this._assertInitialized();\n\n    this.googleMap.panToBounds(latLngBounds, padding);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n   */\n\n\n  getBounds() {\n    this._assertInitialized();\n\n    return this.googleMap.getBounds() || null;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n   */\n\n\n  getCenter() {\n    this._assertInitialized();\n\n    return this.googleMap.getCenter();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n   */\n\n\n  getClickableIcons() {\n    this._assertInitialized();\n\n    return this.googleMap.getClickableIcons();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n   */\n\n\n  getHeading() {\n    this._assertInitialized();\n\n    return this.googleMap.getHeading();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n   */\n\n\n  getMapTypeId() {\n    this._assertInitialized();\n\n    return this.googleMap.getMapTypeId();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n   */\n\n\n  getProjection() {\n    this._assertInitialized();\n\n    return this.googleMap.getProjection() || null;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n   */\n\n\n  getStreetView() {\n    this._assertInitialized();\n\n    return this.googleMap.getStreetView();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n   */\n\n\n  getTilt() {\n    this._assertInitialized();\n\n    return this.googleMap.getTilt();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n   */\n\n\n  getZoom() {\n    this._assertInitialized();\n\n    return this.googleMap.getZoom();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n   */\n\n\n  get controls() {\n    this._assertInitialized();\n\n    return this.googleMap.controls;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n   */\n\n\n  get data() {\n    this._assertInitialized();\n\n    return this.googleMap.data;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n   */\n\n\n  get mapTypes() {\n    this._assertInitialized();\n\n    return this.googleMap.mapTypes;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n   */\n\n\n  get overlayMapTypes() {\n    this._assertInitialized();\n\n    return this.googleMap.overlayMapTypes;\n  }\n\n  _setSize() {\n    if (this._mapEl) {\n      const styles = this._mapEl.style;\n      styles.height = this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n      styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n    }\n  }\n  /** Combines the center and zoom and the other map options into a single object */\n\n\n  _combineOptions() {\n    const options = this._options || {};\n    return { ...options,\n      // It's important that we set **some** kind of `center` and `zoom`, otherwise\n      // Google Maps will render a blank rectangle which looks broken.\n      center: this._center || options.center || DEFAULT_OPTIONS.center,\n      zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n      // Passing in an undefined `mapTypeId` seems to break tile loading\n      // so make sure that we have some kind of default (see #22082).\n      mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId\n    };\n  }\n  /** Asserts that the map has been initialized. */\n\n\n  _assertInitialized() {\n    if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n\n}\n\nGoogleMap.ɵfac = function GoogleMap_Factory(t) {\n  return new (t || GoogleMap)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nGoogleMap.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GoogleMap,\n  selectors: [[\"google-map\"]],\n  inputs: {\n    height: \"height\",\n    width: \"width\",\n    mapTypeId: \"mapTypeId\",\n    center: \"center\",\n    zoom: \"zoom\",\n    options: \"options\"\n  },\n  outputs: {\n    mapInitialized: \"mapInitialized\",\n    authFailure: \"authFailure\",\n    boundsChanged: \"boundsChanged\",\n    centerChanged: \"centerChanged\",\n    mapClick: \"mapClick\",\n    mapDblclick: \"mapDblclick\",\n    mapDrag: \"mapDrag\",\n    mapDragend: \"mapDragend\",\n    mapDragstart: \"mapDragstart\",\n    headingChanged: \"headingChanged\",\n    idle: \"idle\",\n    maptypeidChanged: \"maptypeidChanged\",\n    mapMousemove: \"mapMousemove\",\n    mapMouseout: \"mapMouseout\",\n    mapMouseover: \"mapMouseover\",\n    projectionChanged: \"projectionChanged\",\n    mapRightclick: \"mapRightclick\",\n    tilesloaded: \"tilesloaded\",\n    tiltChanged: \"tiltChanged\",\n    zoomChanged: \"zoomChanged\"\n  },\n  exportAs: [\"googleMap\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"map-container\"]],\n  template: function GoogleMap_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleMap, [{\n    type: Component,\n    args: [{\n      selector: 'google-map',\n      exportAs: 'googleMap',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    mapTypeId: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    zoom: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    mapInitialized: [{\n      type: Output\n    }],\n    authFailure: [{\n      type: Output\n    }],\n    boundsChanged: [{\n      type: Output\n    }],\n    centerChanged: [{\n      type: Output\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    headingChanged: [{\n      type: Output\n    }],\n    idle: [{\n      type: Output\n    }],\n    maptypeidChanged: [{\n      type: Output\n    }],\n    mapMousemove: [{\n      type: Output\n    }],\n    mapMouseout: [{\n      type: Output\n    }],\n    mapMouseover: [{\n      type: Output\n    }],\n    projectionChanged: [{\n      type: Output\n    }],\n    mapRightclick: [{\n      type: Output\n    }],\n    tilesloaded: [{\n      type: Output\n    }],\n    tiltChanged: [{\n      type: Output\n    }],\n    zoomChanged: [{\n      type: Output\n    }]\n  });\n})();\n\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\n\nfunction coerceCssPixelValue(value) {\n  if (value == null) {\n    return '';\n  }\n\n  return cssUnitsPattern.test(value) ? value : `${value}px`;\n} /// <reference types=\"google.maps\" />\n\n\nclass MapBaseLayer {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        this._initializeObject();\n      });\n\n      this._assertInitialized();\n\n      this._setMap();\n    }\n  }\n\n  ngOnDestroy() {\n    this._unsetMap();\n  }\n\n  _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n\n  _initializeObject() {}\n\n  _setMap() {}\n\n  _unsetMap() {}\n\n}\n\nMapBaseLayer.ɵfac = function MapBaseLayer_Factory(t) {\n  return new (t || MapBaseLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapBaseLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapBaseLayer,\n  selectors: [[\"map-base-layer\"]],\n  exportAs: [\"mapBaseLayer\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapBaseLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-base-layer',\n      exportAs: 'mapBaseLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\n\n\nclass MapBicyclingLayer extends MapBaseLayer {\n  _initializeObject() {\n    this.bicyclingLayer = new google.maps.BicyclingLayer();\n  }\n\n  _setMap() {\n    this._assertLayerInitialized();\n\n    this.bicyclingLayer.setMap(this._map.googleMap);\n  }\n\n  _unsetMap() {\n    if (this.bicyclingLayer) {\n      this.bicyclingLayer.setMap(null);\n    }\n  }\n\n  _assertLayerInitialized() {\n    if (!this.bicyclingLayer) {\n      throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n\n}\n\nMapBicyclingLayer.ɵfac = /* @__PURE__ */function () {\n  let ɵMapBicyclingLayer_BaseFactory;\n  return function MapBicyclingLayer_Factory(t) {\n    return (ɵMapBicyclingLayer_BaseFactory || (ɵMapBicyclingLayer_BaseFactory = i0.ɵɵgetInheritedFactory(MapBicyclingLayer)))(t || MapBicyclingLayer);\n  };\n}();\n\nMapBicyclingLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapBicyclingLayer,\n  selectors: [[\"map-bicycling-layer\"]],\n  exportAs: [\"mapBicyclingLayer\"],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapBicyclingLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-bicycling-layer',\n      exportAs: 'mapBicyclingLayer'\n    }]\n  }], null, null);\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\n\n\nclass MapCircle {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._center = new BehaviorSubject(undefined);\n    this._radius = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n     */\n\n    this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n     */\n\n    this.circleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n     */\n\n    this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n     */\n\n    this.circleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n     */\n\n    this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n     */\n\n    this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n     */\n\n    this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n     */\n\n    this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n     */\n\n    this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n     */\n\n    this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n     */\n\n    this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n     */\n\n    this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n     */\n\n    this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n\n  set options(options) {\n    this._options.next(options || {});\n  }\n\n  set center(center) {\n    this._center.next(center);\n  }\n\n  set radius(radius) {\n    this._radius.next(radius);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.circle = new google.maps.Circle(options);\n        });\n\n        this._assertInitialized();\n\n        this.circle.setMap(this._map.googleMap);\n\n        this._eventManager.setTarget(this.circle);\n      });\n\n      this._watchForOptionsChanges();\n\n      this._watchForCenterChanges();\n\n      this._watchForRadiusChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.circle) {\n      this.circle.setMap(null);\n    }\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n   */\n\n\n  getBounds() {\n    this._assertInitialized();\n\n    return this.circle.getBounds();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n\n\n  getCenter() {\n    this._assertInitialized();\n\n    return this.circle.getCenter();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n   */\n\n\n  getDraggable() {\n    this._assertInitialized();\n\n    return this.circle.getDraggable();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n   */\n\n\n  getEditable() {\n    this._assertInitialized();\n\n    return this.circle.getEditable();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n   */\n\n\n  getRadius() {\n    this._assertInitialized();\n\n    return this.circle.getRadius();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n   */\n\n\n  getVisible() {\n    this._assertInitialized();\n\n    return this.circle.getVisible();\n  }\n\n  _combineOptions() {\n    return combineLatest([this._options, this._center, this._radius]).pipe(map(([options, center, radius]) => {\n      const combinedOptions = { ...options,\n        center: center || options.center,\n        radius: radius !== undefined ? radius : options.radius\n      };\n      return combinedOptions;\n    }));\n  }\n\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n\n      this.circle.setOptions(options);\n    });\n  }\n\n  _watchForCenterChanges() {\n    this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n      if (center) {\n        this._assertInitialized();\n\n        this.circle.setCenter(center);\n      }\n    });\n  }\n\n  _watchForRadiusChanges() {\n    this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n      if (radius !== undefined) {\n        this._assertInitialized();\n\n        this.circle.setRadius(radius);\n      }\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.circle) {\n        throw Error('Cannot interact with a Google Map Circle before it has been ' + 'initialized. Please wait for the Circle to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapCircle.ɵfac = function MapCircle_Factory(t) {\n  return new (t || MapCircle)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapCircle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapCircle,\n  selectors: [[\"map-circle\"]],\n  inputs: {\n    options: \"options\",\n    center: \"center\",\n    radius: \"radius\"\n  },\n  outputs: {\n    centerChanged: \"centerChanged\",\n    circleClick: \"circleClick\",\n    circleDblclick: \"circleDblclick\",\n    circleDrag: \"circleDrag\",\n    circleDragend: \"circleDragend\",\n    circleDragstart: \"circleDragstart\",\n    circleMousedown: \"circleMousedown\",\n    circleMousemove: \"circleMousemove\",\n    circleMouseout: \"circleMouseout\",\n    circleMouseover: \"circleMouseover\",\n    circleMouseup: \"circleMouseup\",\n    radiusChanged: \"radiusChanged\",\n    circleRightclick: \"circleRightclick\"\n  },\n  exportAs: [\"mapCircle\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapCircle, [{\n    type: Directive,\n    args: [{\n      selector: 'map-circle',\n      exportAs: 'mapCircle'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    centerChanged: [{\n      type: Output\n    }],\n    circleClick: [{\n      type: Output\n    }],\n    circleDblclick: [{\n      type: Output\n    }],\n    circleDrag: [{\n      type: Output\n    }],\n    circleDragend: [{\n      type: Output\n    }],\n    circleDragstart: [{\n      type: Output\n    }],\n    circleMousedown: [{\n      type: Output\n    }],\n    circleMousemove: [{\n      type: Output\n    }],\n    circleMouseout: [{\n      type: Output\n    }],\n    circleMouseover: [{\n      type: Output\n    }],\n    circleMouseup: [{\n      type: Output\n    }],\n    radiusChanged: [{\n      type: Output\n    }],\n    circleRightclick: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\n\n\nclass MapDirectionsRenderer {\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.directions_changed\n     */\n\n    this.directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions.directions\n   */\n\n\n  set directions(directions) {\n    this._directions = directions;\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions\n   */\n\n\n  set options(options) {\n    this._options = options;\n  }\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.directionsRenderer = new google.maps.DirectionsRenderer(this._combineOptions());\n      });\n\n      this._assertInitialized();\n\n      this.directionsRenderer.setMap(this._googleMap.googleMap);\n\n      this._eventManager.setTarget(this.directionsRenderer);\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (this.directionsRenderer) {\n      if (changes['options']) {\n        this.directionsRenderer.setOptions(this._combineOptions());\n      }\n\n      if (changes['directions'] && this._directions !== undefined) {\n        this.directionsRenderer.setDirections(this._directions);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    if (this.directionsRenderer) {\n      this.directionsRenderer.setMap(null);\n    }\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getDirections\n   */\n\n\n  getDirections() {\n    this._assertInitialized();\n\n    return this.directionsRenderer.getDirections();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getPanel\n   */\n\n\n  getPanel() {\n    this._assertInitialized();\n\n    return this.directionsRenderer.getPanel();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getRouteIndex\n   */\n\n\n  getRouteIndex() {\n    this._assertInitialized();\n\n    return this.directionsRenderer.getRouteIndex();\n  }\n\n  _combineOptions() {\n    const options = this._options || {};\n    return { ...options,\n      directions: this._directions || options.directions,\n      map: this._googleMap.googleMap\n    };\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.directionsRenderer) {\n        throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' + 'initialized. Please wait for the Directions Renderer to load before trying ' + 'to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapDirectionsRenderer.ɵfac = function MapDirectionsRenderer_Factory(t) {\n  return new (t || MapDirectionsRenderer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapDirectionsRenderer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapDirectionsRenderer,\n  selectors: [[\"map-directions-renderer\"]],\n  inputs: {\n    directions: \"directions\",\n    options: \"options\"\n  },\n  outputs: {\n    directionsChanged: \"directionsChanged\"\n  },\n  exportAs: [\"mapDirectionsRenderer\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapDirectionsRenderer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-directions-renderer',\n      exportAs: 'mapDirectionsRenderer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    directions: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    directionsChanged: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\n\n\nclass MapGroundOverlay {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._opacity = new BehaviorSubject(1);\n    this._url = new BehaviorSubject('');\n    this._bounds = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /** Whether the overlay is clickable */\n\n    this.clickable = false;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n     */\n\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.dblclick\n     */\n\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n  }\n  /** URL of the image that will be shown in the overlay. */\n\n\n  set url(url) {\n    this._url.next(url);\n  }\n  /** Bounds for the overlay. */\n\n\n  get bounds() {\n    return this._bounds.value;\n  }\n\n  set bounds(bounds) {\n    this._bounds.next(bounds);\n  }\n  /** Opacity of the overlay. */\n\n\n  set opacity(opacity) {\n    this._opacity.next(opacity);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      // The ground overlay setup is slightly different from the other Google Maps objects in that\n      // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n      // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n      this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n        if (this.groundOverlay) {\n          this.groundOverlay.setMap(null);\n          this.groundOverlay = undefined;\n        } // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n\n\n        if (bounds) {\n          this._ngZone.runOutsideAngular(() => {\n            this.groundOverlay = new google.maps.GroundOverlay(this._url.getValue(), bounds, {\n              clickable: this.clickable,\n              opacity: this._opacity.value\n            });\n          });\n\n          this._assertInitialized();\n\n          this.groundOverlay.setMap(this._map.googleMap);\n\n          this._eventManager.setTarget(this.groundOverlay);\n        }\n      });\n\n      this._watchForOpacityChanges();\n\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.groundOverlay) {\n      this.groundOverlay.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getBounds\n   */\n\n\n  getBounds() {\n    this._assertInitialized();\n\n    return this.groundOverlay.getBounds();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getOpacity\n   */\n\n\n  getOpacity() {\n    this._assertInitialized();\n\n    return this.groundOverlay.getOpacity();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getUrl\n   */\n\n\n  getUrl() {\n    this._assertInitialized();\n\n    return this.groundOverlay.getUrl();\n  }\n\n  _watchForOpacityChanges() {\n    this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n      if (opacity != null) {\n        this._assertInitialized();\n\n        this.groundOverlay.setOpacity(opacity);\n      }\n    });\n  }\n\n  _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      this._assertInitialized();\n\n      const overlay = this.groundOverlay;\n      overlay.set('url', url); // Google Maps only redraws the overlay if we re-set the map.\n\n      overlay.setMap(null);\n      overlay.setMap(this._map.googleMap);\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.groundOverlay) {\n        throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' + 'Please wait for the GroundOverlay to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapGroundOverlay.ɵfac = function MapGroundOverlay_Factory(t) {\n  return new (t || MapGroundOverlay)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapGroundOverlay.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapGroundOverlay,\n  selectors: [[\"map-ground-overlay\"]],\n  inputs: {\n    url: \"url\",\n    bounds: \"bounds\",\n    clickable: \"clickable\",\n    opacity: \"opacity\"\n  },\n  outputs: {\n    mapClick: \"mapClick\",\n    mapDblclick: \"mapDblclick\"\n  },\n  exportAs: [\"mapGroundOverlay\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapGroundOverlay, [{\n    type: Directive,\n    args: [{\n      selector: 'map-ground-overlay',\n      exportAs: 'mapGroundOverlay'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    url: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\n\n\nclass MapInfoWindow {\n  constructor(_googleMap, _elementRef, _ngZone) {\n    this._googleMap = _googleMap;\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._position = new BehaviorSubject(undefined);\n    this._destroy = new Subject();\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n     */\n\n    this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.content_changed\n     */\n\n    this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n     */\n\n    this.domready = this._eventManager.getLazyEmitter('domready');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.position_changed\n     */\n\n    this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.zindex_changed\n     */\n\n    this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n  }\n\n  set options(options) {\n    this._options.next(options || {});\n  }\n\n  set position(position) {\n    this._position.next(position);\n  }\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      const combinedOptionsChanges = this._combineOptions();\n\n      combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.infoWindow = new google.maps.InfoWindow(options);\n        });\n\n        this._eventManager.setTarget(this.infoWindow);\n      });\n\n      this._watchForOptionsChanges();\n\n      this._watchForPositionChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroy.next();\n\n    this._destroy.complete(); // If no info window has been created on the server, we do not try closing it.\n    // On the server, an info window cannot be created and this would cause errors.\n\n\n    if (this.infoWindow) {\n      this.close();\n    }\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n   */\n\n\n  close() {\n    this._assertInitialized();\n\n    this.infoWindow.close();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n   */\n\n\n  getContent() {\n    this._assertInitialized();\n\n    return this.infoWindow.getContent() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.getPosition\n   */\n\n\n  getPosition() {\n    this._assertInitialized();\n\n    return this.infoWindow.getPosition() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n   */\n\n\n  getZIndex() {\n    this._assertInitialized();\n\n    return this.infoWindow.getZIndex();\n  }\n  /**\n   * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n   * then the position property of the options input is used instead.\n   */\n\n\n  open(anchor, shouldFocus) {\n    this._assertInitialized();\n\n    const anchorObject = anchor ? anchor.getAnchor() : undefined; // Prevent the info window from initializing when trying to reopen on the same anchor.\n    // Note that when the window is opened for the first time, the anchor will always be\n    // undefined. If that's the case, we have to allow it to open in order to handle the\n    // case where the window doesn't have an anchor, but is placed at a particular position.\n\n    if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n      this._elementRef.nativeElement.style.display = ''; // The config is cast to `any`, because the internal typings are out of date.\n\n      this.infoWindow.open({\n        map: this._googleMap.googleMap,\n        anchor: anchorObject,\n        shouldFocus\n      });\n    }\n  }\n\n  _combineOptions() {\n    return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n      const combinedOptions = { ...options,\n        position: position || options.position,\n        content: this._elementRef.nativeElement\n      };\n      return combinedOptions;\n    }));\n  }\n\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      this._assertInitialized();\n\n      this.infoWindow.setOptions(options);\n    });\n  }\n\n  _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (position) {\n        this._assertInitialized();\n\n        this.infoWindow.setPosition(position);\n      }\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.infoWindow) {\n        throw Error('Cannot interact with a Google Map Info Window before it has been ' + 'initialized. Please wait for the Info Window to load before trying to interact with ' + 'it.');\n      }\n    }\n  }\n\n}\n\nMapInfoWindow.ɵfac = function MapInfoWindow_Factory(t) {\n  return new (t || MapInfoWindow)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapInfoWindow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapInfoWindow,\n  selectors: [[\"map-info-window\"]],\n  hostAttrs: [2, \"display\", \"none\"],\n  inputs: {\n    options: \"options\",\n    position: \"position\"\n  },\n  outputs: {\n    closeclick: \"closeclick\",\n    contentChanged: \"contentChanged\",\n    domready: \"domready\",\n    positionChanged: \"positionChanged\",\n    zindexChanged: \"zindexChanged\"\n  },\n  exportAs: [\"mapInfoWindow\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapInfoWindow, [{\n    type: Directive,\n    args: [{\n      selector: 'map-info-window',\n      exportAs: 'mapInfoWindow',\n      host: {\n        'style': 'display: none'\n      }\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    closeclick: [{\n      type: Output\n    }],\n    contentChanged: [{\n      type: Output\n    }],\n    domready: [{\n      type: Output\n    }],\n    positionChanged: [{\n      type: Output\n    }],\n    zindexChanged: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\n\n\nclass MapKmlLayer {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._url = new BehaviorSubject('');\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n     */\n\n    this.kmlClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml\n     * #KmlLayer.defaultviewport_changed\n     */\n\n    this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n     */\n\n    this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n  }\n\n  set options(options) {\n    this._options.next(options || {});\n  }\n\n  set url(url) {\n    this._url.next(url);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.kmlLayer = new google.maps.KmlLayer(options));\n\n        this._assertInitialized();\n\n        this.kmlLayer.setMap(this._map.googleMap);\n\n        this._eventManager.setTarget(this.kmlLayer);\n      });\n\n      this._watchForOptionsChanges();\n\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.kmlLayer) {\n      this.kmlLayer.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n   */\n\n\n  getDefaultViewport() {\n    this._assertInitialized();\n\n    return this.kmlLayer.getDefaultViewport();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n   */\n\n\n  getMetadata() {\n    this._assertInitialized();\n\n    return this.kmlLayer.getMetadata();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n   */\n\n\n  getStatus() {\n    this._assertInitialized();\n\n    return this.kmlLayer.getStatus();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n   */\n\n\n  getUrl() {\n    this._assertInitialized();\n\n    return this.kmlLayer.getUrl();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n   */\n\n\n  getZIndex() {\n    this._assertInitialized();\n\n    return this.kmlLayer.getZIndex();\n  }\n\n  _combineOptions() {\n    return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n      const combinedOptions = { ...options,\n        url: url || options.url\n      };\n      return combinedOptions;\n    }));\n  }\n\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      if (this.kmlLayer) {\n        this._assertInitialized();\n\n        this.kmlLayer.setOptions(options);\n      }\n    });\n  }\n\n  _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      if (url && this.kmlLayer) {\n        this._assertInitialized();\n\n        this.kmlLayer.setUrl(url);\n      }\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.kmlLayer) {\n        throw Error('Cannot interact with a Google Map KmlLayer before it has been ' + 'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapKmlLayer.ɵfac = function MapKmlLayer_Factory(t) {\n  return new (t || MapKmlLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapKmlLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapKmlLayer,\n  selectors: [[\"map-kml-layer\"]],\n  inputs: {\n    options: \"options\",\n    url: \"url\"\n  },\n  outputs: {\n    kmlClick: \"kmlClick\",\n    defaultviewportChanged: \"defaultviewportChanged\",\n    statusChanged: \"statusChanged\"\n  },\n  exportAs: [\"mapKmlLayer\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapKmlLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-kml-layer',\n      exportAs: 'mapKmlLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    kmlClick: [{\n      type: Output\n    }],\n    defaultviewportChanged: [{\n      type: Output\n    }],\n    statusChanged: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\n\n\nconst DEFAULT_MARKER_OPTIONS = {\n  position: {\n    lat: 37.421995,\n    lng: -122.084092\n  }\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\n\nclass MapMarker {\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n     */\n\n    this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n     */\n\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n     */\n\n    this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n     */\n\n    this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n     */\n\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n     */\n\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n     */\n\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n     */\n\n    this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n     */\n\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n     */\n\n    this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n     */\n\n    this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n     */\n\n    this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n     */\n\n    this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n     */\n\n    this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n     */\n\n    this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n     */\n\n    this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n     */\n\n    this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n     */\n\n    this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n     */\n\n    this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n     */\n\n    this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n     */\n\n    this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n  }\n  /**\n   * Title of the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n   */\n\n\n  set title(title) {\n    this._title = title;\n  }\n  /**\n   * Position of the marker. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n   */\n\n\n  set position(position) {\n    this._position = position;\n  }\n  /**\n   * Label for the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n   */\n\n\n  set label(label) {\n    this._label = label;\n  }\n  /**\n   * Whether the marker is clickable. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n   */\n\n\n  set clickable(clickable) {\n    this._clickable = clickable;\n  }\n  /**\n   * Options used to configure the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n   */\n\n\n  set options(options) {\n    this._options = options;\n  }\n  /**\n   * Icon to be used for the marker.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n   */\n\n\n  set icon(icon) {\n    this._icon = icon;\n  }\n  /**\n   * Whether the marker is visible.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n   */\n\n\n  set visible(value) {\n    this._visible = value;\n  }\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.marker = new google.maps.Marker(this._combineOptions());\n      });\n\n      this._assertInitialized();\n\n      this.marker.setMap(this._googleMap.googleMap);\n\n      this._eventManager.setTarget(this.marker);\n    }\n  }\n\n  ngOnChanges(changes) {\n    const {\n      marker,\n      _title,\n      _position,\n      _label,\n      _clickable,\n      _icon,\n      _visible\n    } = this;\n\n    if (marker) {\n      if (changes['options']) {\n        marker.setOptions(this._combineOptions());\n      }\n\n      if (changes['title'] && _title !== undefined) {\n        marker.setTitle(_title);\n      }\n\n      if (changes['position'] && _position) {\n        marker.setPosition(_position);\n      }\n\n      if (changes['label'] && _label !== undefined) {\n        marker.setLabel(_label);\n      }\n\n      if (changes['clickable'] && _clickable !== undefined) {\n        marker.setClickable(_clickable);\n      }\n\n      if (changes['icon'] && _icon) {\n        marker.setIcon(_icon);\n      }\n\n      if (changes['visible'] && _visible !== undefined) {\n        marker.setVisible(_visible);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    if (this.marker) {\n      this.marker.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n   */\n\n\n  getAnimation() {\n    this._assertInitialized();\n\n    return this.marker.getAnimation() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n   */\n\n\n  getClickable() {\n    this._assertInitialized();\n\n    return this.marker.getClickable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n   */\n\n\n  getCursor() {\n    this._assertInitialized();\n\n    return this.marker.getCursor() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n   */\n\n\n  getDraggable() {\n    this._assertInitialized();\n\n    return !!this.marker.getDraggable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n   */\n\n\n  getIcon() {\n    this._assertInitialized();\n\n    return this.marker.getIcon() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n   */\n\n\n  getLabel() {\n    this._assertInitialized();\n\n    return this.marker.getLabel() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n   */\n\n\n  getOpacity() {\n    this._assertInitialized();\n\n    return this.marker.getOpacity() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n   */\n\n\n  getPosition() {\n    this._assertInitialized();\n\n    return this.marker.getPosition() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n   */\n\n\n  getShape() {\n    this._assertInitialized();\n\n    return this.marker.getShape() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n   */\n\n\n  getTitle() {\n    this._assertInitialized();\n\n    return this.marker.getTitle() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n   */\n\n\n  getVisible() {\n    this._assertInitialized();\n\n    return this.marker.getVisible();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n   */\n\n\n  getZIndex() {\n    this._assertInitialized();\n\n    return this.marker.getZIndex() || null;\n  }\n  /** Gets the anchor point that can be used to attach other Google Maps objects. */\n\n\n  getAnchor() {\n    this._assertInitialized();\n\n    return this.marker;\n  }\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n\n\n  _combineOptions() {\n    const options = this._options || DEFAULT_MARKER_OPTIONS;\n    return { ...options,\n      title: this._title || options.title,\n      position: this._position || options.position,\n      label: this._label || options.label,\n      clickable: this._clickable ?? options.clickable,\n      map: this._googleMap.googleMap,\n      icon: this._icon || options.icon,\n      visible: this._visible ?? options.visible\n    };\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.marker) {\n        throw Error('Cannot interact with a Google Map Marker before it has been ' + 'initialized. Please wait for the Marker to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapMarker.ɵfac = function MapMarker_Factory(t) {\n  return new (t || MapMarker)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapMarker.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapMarker,\n  selectors: [[\"map-marker\"]],\n  inputs: {\n    title: \"title\",\n    position: \"position\",\n    label: \"label\",\n    clickable: \"clickable\",\n    options: \"options\",\n    icon: \"icon\",\n    visible: \"visible\"\n  },\n  outputs: {\n    animationChanged: \"animationChanged\",\n    mapClick: \"mapClick\",\n    clickableChanged: \"clickableChanged\",\n    cursorChanged: \"cursorChanged\",\n    mapDblclick: \"mapDblclick\",\n    mapDrag: \"mapDrag\",\n    mapDragend: \"mapDragend\",\n    draggableChanged: \"draggableChanged\",\n    mapDragstart: \"mapDragstart\",\n    flatChanged: \"flatChanged\",\n    iconChanged: \"iconChanged\",\n    mapMousedown: \"mapMousedown\",\n    mapMouseout: \"mapMouseout\",\n    mapMouseover: \"mapMouseover\",\n    mapMouseup: \"mapMouseup\",\n    positionChanged: \"positionChanged\",\n    mapRightclick: \"mapRightclick\",\n    shapeChanged: \"shapeChanged\",\n    titleChanged: \"titleChanged\",\n    visibleChanged: \"visibleChanged\",\n    zindexChanged: \"zindexChanged\"\n  },\n  exportAs: [\"mapMarker\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapMarker, [{\n    type: Directive,\n    args: [{\n      selector: 'map-marker',\n      exportAs: 'mapMarker'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    title: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    animationChanged: [{\n      type: Output\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    clickableChanged: [{\n      type: Output\n    }],\n    cursorChanged: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    draggableChanged: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    flatChanged: [{\n      type: Output\n    }],\n    iconChanged: [{\n      type: Output\n    }],\n    mapMousedown: [{\n      type: Output\n    }],\n    mapMouseout: [{\n      type: Output\n    }],\n    mapMouseover: [{\n      type: Output\n    }],\n    mapMouseup: [{\n      type: Output\n    }],\n    positionChanged: [{\n      type: Output\n    }],\n    mapRightclick: [{\n      type: Output\n    }],\n    shapeChanged: [{\n      type: Output\n    }],\n    titleChanged: [{\n      type: Output\n    }],\n    visibleChanged: [{\n      type: Output\n    }],\n    zindexChanged: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/** Default options for a clusterer. */\n\n\nconst DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\n\nclass MapMarkerClusterer {\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._currentMarkers = new Set();\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._destroy = new Subject();\n\n    this.ariaLabelFn = () => '';\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/\n     * _google_markerclustererplus.html#clusteringbegin\n     */\n\n\n    this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n     */\n\n    this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n    /** Emits when a cluster has been clicked. */\n\n    this.clusterClick = this._eventManager.getLazyEmitter('click');\n    this._canInitialize = this._googleMap._isBrowser;\n  }\n\n  set averageCenter(averageCenter) {\n    this._averageCenter = averageCenter;\n  }\n\n  set batchSizeIE(batchSizeIE) {\n    this._batchSizeIE = batchSizeIE;\n  }\n\n  set calculator(calculator) {\n    this._calculator = calculator;\n  }\n\n  set clusterClass(clusterClass) {\n    this._clusterClass = clusterClass;\n  }\n\n  set enableRetinaIcons(enableRetinaIcons) {\n    this._enableRetinaIcons = enableRetinaIcons;\n  }\n\n  set gridSize(gridSize) {\n    this._gridSize = gridSize;\n  }\n\n  set ignoreHidden(ignoreHidden) {\n    this._ignoreHidden = ignoreHidden;\n  }\n\n  set imageExtension(imageExtension) {\n    this._imageExtension = imageExtension;\n  }\n\n  set imagePath(imagePath) {\n    this._imagePath = imagePath;\n  }\n\n  set imageSizes(imageSizes) {\n    this._imageSizes = imageSizes;\n  }\n\n  set maxZoom(maxZoom) {\n    this._maxZoom = maxZoom;\n  }\n\n  set minimumClusterSize(minimumClusterSize) {\n    this._minimumClusterSize = minimumClusterSize;\n  }\n\n  set styles(styles) {\n    this._styles = styles;\n  }\n\n  set title(title) {\n    this._title = title;\n  }\n\n  set zIndex(zIndex) {\n    this._zIndex = zIndex;\n  }\n\n  set zoomOnClick(zoomOnClick) {\n    this._zoomOnClick = zoomOnClick;\n  }\n\n  set options(options) {\n    this._options = options;\n  }\n\n  ngOnInit() {\n    if (this._canInitialize) {\n      if (typeof MarkerClusterer !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('MarkerClusterer class not found, cannot construct a marker cluster. ' + 'Please install the MarkerClustererPlus library: ' + 'https://github.com/googlemaps/js-markerclustererplus');\n      } // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n\n\n      this._ngZone.runOutsideAngular(() => {\n        this.markerClusterer = new MarkerClusterer(this._googleMap.googleMap, [], this._combineOptions());\n      });\n\n      this._assertInitialized();\n\n      this._eventManager.setTarget(this.markerClusterer);\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this._canInitialize) {\n      this._watchForMarkerChanges();\n    }\n  }\n\n  ngOnChanges(changes) {\n    const {\n      markerClusterer: clusterer,\n      ariaLabelFn,\n      _averageCenter,\n      _batchSizeIE,\n      _calculator,\n      _styles,\n      _clusterClass,\n      _enableRetinaIcons,\n      _gridSize,\n      _ignoreHidden,\n      _imageExtension,\n      _imagePath,\n      _imageSizes,\n      _maxZoom,\n      _minimumClusterSize,\n      _title,\n      _zIndex,\n      _zoomOnClick\n    } = this;\n\n    if (clusterer) {\n      if (changes['options']) {\n        clusterer.setOptions(this._combineOptions());\n      }\n\n      if (changes['ariaLabelFn']) {\n        clusterer.ariaLabelFn = ariaLabelFn;\n      }\n\n      if (changes['averageCenter'] && _averageCenter !== undefined) {\n        clusterer.setAverageCenter(_averageCenter);\n      }\n\n      if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n        clusterer.setBatchSizeIE(_batchSizeIE);\n      }\n\n      if (changes['calculator'] && !!_calculator) {\n        clusterer.setCalculator(_calculator);\n      }\n\n      if (changes['clusterClass'] && _clusterClass !== undefined) {\n        clusterer.setClusterClass(_clusterClass);\n      }\n\n      if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n        clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n      }\n\n      if (changes['gridSize'] && _gridSize !== undefined) {\n        clusterer.setGridSize(_gridSize);\n      }\n\n      if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n        clusterer.setIgnoreHidden(_ignoreHidden);\n      }\n\n      if (changes['imageExtension'] && _imageExtension !== undefined) {\n        clusterer.setImageExtension(_imageExtension);\n      }\n\n      if (changes['imagePath'] && _imagePath !== undefined) {\n        clusterer.setImagePath(_imagePath);\n      }\n\n      if (changes['imageSizes'] && _imageSizes) {\n        clusterer.setImageSizes(_imageSizes);\n      }\n\n      if (changes['maxZoom'] && _maxZoom !== undefined) {\n        clusterer.setMaxZoom(_maxZoom);\n      }\n\n      if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n        clusterer.setMinimumClusterSize(_minimumClusterSize);\n      }\n\n      if (changes['styles'] && _styles) {\n        clusterer.setStyles(_styles);\n      }\n\n      if (changes['title'] && _title !== undefined) {\n        clusterer.setTitle(_title);\n      }\n\n      if (changes['zIndex'] && _zIndex !== undefined) {\n        clusterer.setZIndex(_zIndex);\n      }\n\n      if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n        clusterer.setZoomOnClick(_zoomOnClick);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n\n    this._destroy.complete();\n\n    this._eventManager.destroy();\n\n    if (this.markerClusterer) {\n      this.markerClusterer.setMap(null);\n    }\n  }\n\n  fitMapToMarkers(padding) {\n    this._assertInitialized();\n\n    this.markerClusterer.fitMapToMarkers(padding);\n  }\n\n  getAverageCenter() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getAverageCenter();\n  }\n\n  getBatchSizeIE() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getBatchSizeIE();\n  }\n\n  getCalculator() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getCalculator();\n  }\n\n  getClusterClass() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getClusterClass();\n  }\n\n  getClusters() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getClusters();\n  }\n\n  getEnableRetinaIcons() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getEnableRetinaIcons();\n  }\n\n  getGridSize() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getGridSize();\n  }\n\n  getIgnoreHidden() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getIgnoreHidden();\n  }\n\n  getImageExtension() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getImageExtension();\n  }\n\n  getImagePath() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getImagePath();\n  }\n\n  getImageSizes() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getImageSizes();\n  }\n\n  getMaxZoom() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getMaxZoom();\n  }\n\n  getMinimumClusterSize() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getMinimumClusterSize();\n  }\n\n  getStyles() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getStyles();\n  }\n\n  getTitle() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getTitle();\n  }\n\n  getTotalClusters() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getTotalClusters();\n  }\n\n  getTotalMarkers() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getTotalMarkers();\n  }\n\n  getZIndex() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getZIndex();\n  }\n\n  getZoomOnClick() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getZoomOnClick();\n  }\n\n  _combineOptions() {\n    const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n    return { ...options,\n      ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n      averageCenter: this._averageCenter ?? options.averageCenter,\n      batchSize: this.batchSize ?? options.batchSize,\n      batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n      calculator: this._calculator ?? options.calculator,\n      clusterClass: this._clusterClass ?? options.clusterClass,\n      enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n      gridSize: this._gridSize ?? options.gridSize,\n      ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n      imageExtension: this._imageExtension ?? options.imageExtension,\n      imagePath: this._imagePath ?? options.imagePath,\n      imageSizes: this._imageSizes ?? options.imageSizes,\n      maxZoom: this._maxZoom ?? options.maxZoom,\n      minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n      styles: this._styles ?? options.styles,\n      title: this._title ?? options.title,\n      zIndex: this._zIndex ?? options.zIndex,\n      zoomOnClick: this._zoomOnClick ?? options.zoomOnClick\n    };\n  }\n\n  _watchForMarkerChanges() {\n    this._assertInitialized();\n\n    const initialMarkers = [];\n\n    for (const marker of this._getInternalMarkers(this._markers.toArray())) {\n      this._currentMarkers.add(marker);\n\n      initialMarkers.push(marker);\n    }\n\n    this.markerClusterer.addMarkers(initialMarkers);\n\n    this._markers.changes.pipe(takeUntil(this._destroy)).subscribe(markerComponents => {\n      this._assertInitialized();\n\n      const newMarkers = new Set(this._getInternalMarkers(markerComponents));\n      const markersToAdd = [];\n      const markersToRemove = [];\n\n      for (const marker of Array.from(newMarkers)) {\n        if (!this._currentMarkers.has(marker)) {\n          this._currentMarkers.add(marker);\n\n          markersToAdd.push(marker);\n        }\n      }\n\n      for (const marker of Array.from(this._currentMarkers)) {\n        if (!newMarkers.has(marker)) {\n          markersToRemove.push(marker);\n        }\n      }\n\n      this.markerClusterer.addMarkers(markersToAdd, true);\n      this.markerClusterer.removeMarkers(markersToRemove, true);\n      this.markerClusterer.repaint();\n\n      for (const marker of markersToRemove) {\n        this._currentMarkers.delete(marker);\n      }\n    });\n  }\n\n  _getInternalMarkers(markers) {\n    return markers.filter(markerComponent => !!markerComponent.marker).map(markerComponent => markerComponent.marker);\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.markerClusterer) {\n        throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' + 'Please wait for the MarkerClusterer to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapMarkerClusterer.ɵfac = function MapMarkerClusterer_Factory(t) {\n  return new (t || MapMarkerClusterer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapMarkerClusterer.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MapMarkerClusterer,\n  selectors: [[\"map-marker-clusterer\"]],\n  contentQueries: function MapMarkerClusterer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MapMarker, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._markers = _t);\n    }\n  },\n  inputs: {\n    ariaLabelFn: \"ariaLabelFn\",\n    averageCenter: \"averageCenter\",\n    batchSize: \"batchSize\",\n    batchSizeIE: \"batchSizeIE\",\n    calculator: \"calculator\",\n    clusterClass: \"clusterClass\",\n    enableRetinaIcons: \"enableRetinaIcons\",\n    gridSize: \"gridSize\",\n    ignoreHidden: \"ignoreHidden\",\n    imageExtension: \"imageExtension\",\n    imagePath: \"imagePath\",\n    imageSizes: \"imageSizes\",\n    maxZoom: \"maxZoom\",\n    minimumClusterSize: \"minimumClusterSize\",\n    styles: \"styles\",\n    title: \"title\",\n    zIndex: \"zIndex\",\n    zoomOnClick: \"zoomOnClick\",\n    options: \"options\"\n  },\n  outputs: {\n    clusteringbegin: \"clusteringbegin\",\n    clusteringend: \"clusteringend\",\n    clusterClick: \"clusterClick\"\n  },\n  exportAs: [\"mapMarkerClusterer\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MapMarkerClusterer_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapMarkerClusterer, [{\n    type: Component,\n    args: [{\n      selector: 'map-marker-clusterer',\n      exportAs: 'mapMarkerClusterer',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    ariaLabelFn: [{\n      type: Input\n    }],\n    averageCenter: [{\n      type: Input\n    }],\n    batchSize: [{\n      type: Input\n    }],\n    batchSizeIE: [{\n      type: Input\n    }],\n    calculator: [{\n      type: Input\n    }],\n    clusterClass: [{\n      type: Input\n    }],\n    enableRetinaIcons: [{\n      type: Input\n    }],\n    gridSize: [{\n      type: Input\n    }],\n    ignoreHidden: [{\n      type: Input\n    }],\n    imageExtension: [{\n      type: Input\n    }],\n    imagePath: [{\n      type: Input\n    }],\n    imageSizes: [{\n      type: Input\n    }],\n    maxZoom: [{\n      type: Input\n    }],\n    minimumClusterSize: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    zoomOnClick: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    clusteringbegin: [{\n      type: Output\n    }],\n    clusteringend: [{\n      type: Output\n    }],\n    clusterClick: [{\n      type: Output\n    }],\n    _markers: [{\n      type: ContentChildren,\n      args: [MapMarker, {\n        descendants: true\n      }]\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\n\n\nclass MapPolygon {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._paths = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n     */\n\n    this.polygonClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n     */\n\n    this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n     */\n\n    this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n     */\n\n    this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n     */\n\n    this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n     */\n\n    this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n     */\n\n    this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n     */\n\n    this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n     */\n\n    this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n     */\n\n    this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n     */\n\n    this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n\n  set options(options) {\n    this._options.next(options || {});\n  }\n\n  set paths(paths) {\n    this._paths.next(paths);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.polygon = new google.maps.Polygon(options);\n        });\n\n        this._assertInitialized();\n\n        this.polygon.setMap(this._map.googleMap);\n\n        this._eventManager.setTarget(this.polygon);\n      });\n\n      this._watchForOptionsChanges();\n\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.polygon) {\n      this.polygon.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n   */\n\n\n  getDraggable() {\n    this._assertInitialized();\n\n    return this.polygon.getDraggable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n   */\n\n\n  getEditable() {\n    this._assertInitialized();\n\n    return this.polygon.getEditable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n   */\n\n\n  getPath() {\n    this._assertInitialized();\n\n    return this.polygon.getPath();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n   */\n\n\n  getPaths() {\n    this._assertInitialized();\n\n    return this.polygon.getPaths();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n   */\n\n\n  getVisible() {\n    this._assertInitialized();\n\n    return this.polygon.getVisible();\n  }\n\n  _combineOptions() {\n    return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n      const combinedOptions = { ...options,\n        paths: paths || options.paths\n      };\n      return combinedOptions;\n    }));\n  }\n\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n\n      this.polygon.setOptions(options);\n    });\n  }\n\n  _watchForPathChanges() {\n    this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n      if (paths) {\n        this._assertInitialized();\n\n        this.polygon.setPaths(paths);\n      }\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.polygon) {\n        throw Error('Cannot interact with a Google Map Polygon before it has been ' + 'initialized. Please wait for the Polygon to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapPolygon.ɵfac = function MapPolygon_Factory(t) {\n  return new (t || MapPolygon)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapPolygon.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapPolygon,\n  selectors: [[\"map-polygon\"]],\n  inputs: {\n    options: \"options\",\n    paths: \"paths\"\n  },\n  outputs: {\n    polygonClick: \"polygonClick\",\n    polygonDblclick: \"polygonDblclick\",\n    polygonDrag: \"polygonDrag\",\n    polygonDragend: \"polygonDragend\",\n    polygonDragstart: \"polygonDragstart\",\n    polygonMousedown: \"polygonMousedown\",\n    polygonMousemove: \"polygonMousemove\",\n    polygonMouseout: \"polygonMouseout\",\n    polygonMouseover: \"polygonMouseover\",\n    polygonMouseup: \"polygonMouseup\",\n    polygonRightclick: \"polygonRightclick\"\n  },\n  exportAs: [\"mapPolygon\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapPolygon, [{\n    type: Directive,\n    args: [{\n      selector: 'map-polygon',\n      exportAs: 'mapPolygon'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    paths: [{\n      type: Input\n    }],\n    polygonClick: [{\n      type: Output\n    }],\n    polygonDblclick: [{\n      type: Output\n    }],\n    polygonDrag: [{\n      type: Output\n    }],\n    polygonDragend: [{\n      type: Output\n    }],\n    polygonDragstart: [{\n      type: Output\n    }],\n    polygonMousedown: [{\n      type: Output\n    }],\n    polygonMousemove: [{\n      type: Output\n    }],\n    polygonMouseout: [{\n      type: Output\n    }],\n    polygonMouseover: [{\n      type: Output\n    }],\n    polygonMouseup: [{\n      type: Output\n    }],\n    polygonRightclick: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\n\n\nclass MapPolyline {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._path = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n     */\n\n    this.polylineClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n     */\n\n    this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n     */\n\n    this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n     */\n\n    this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n     */\n\n    this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n     */\n\n    this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n     */\n\n    this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n     */\n\n    this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n     */\n\n    this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n     */\n\n    this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n     */\n\n    this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n\n  set options(options) {\n    this._options.next(options || {});\n  }\n\n  set path(path) {\n    this._path.next(path);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.polyline = new google.maps.Polyline(options));\n\n        this._assertInitialized();\n\n        this.polyline.setMap(this._map.googleMap);\n\n        this._eventManager.setTarget(this.polyline);\n      });\n\n      this._watchForOptionsChanges();\n\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.polyline) {\n      this.polyline.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n   */\n\n\n  getDraggable() {\n    this._assertInitialized();\n\n    return this.polyline.getDraggable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n   */\n\n\n  getEditable() {\n    this._assertInitialized();\n\n    return this.polyline.getEditable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n   */\n\n\n  getPath() {\n    this._assertInitialized();\n\n    return this.polyline.getPath();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n   */\n\n\n  getVisible() {\n    this._assertInitialized();\n\n    return this.polyline.getVisible();\n  }\n\n  _combineOptions() {\n    return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n      const combinedOptions = { ...options,\n        path: path || options.path\n      };\n      return combinedOptions;\n    }));\n  }\n\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n\n      this.polyline.setOptions(options);\n    });\n  }\n\n  _watchForPathChanges() {\n    this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n      if (path) {\n        this._assertInitialized();\n\n        this.polyline.setPath(path);\n      }\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.polyline) {\n        throw Error('Cannot interact with a Google Map Polyline before it has been ' + 'initialized. Please wait for the Polyline to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapPolyline.ɵfac = function MapPolyline_Factory(t) {\n  return new (t || MapPolyline)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapPolyline.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapPolyline,\n  selectors: [[\"map-polyline\"]],\n  inputs: {\n    options: \"options\",\n    path: \"path\"\n  },\n  outputs: {\n    polylineClick: \"polylineClick\",\n    polylineDblclick: \"polylineDblclick\",\n    polylineDrag: \"polylineDrag\",\n    polylineDragend: \"polylineDragend\",\n    polylineDragstart: \"polylineDragstart\",\n    polylineMousedown: \"polylineMousedown\",\n    polylineMousemove: \"polylineMousemove\",\n    polylineMouseout: \"polylineMouseout\",\n    polylineMouseover: \"polylineMouseover\",\n    polylineMouseup: \"polylineMouseup\",\n    polylineRightclick: \"polylineRightclick\"\n  },\n  exportAs: [\"mapPolyline\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapPolyline, [{\n    type: Directive,\n    args: [{\n      selector: 'map-polyline',\n      exportAs: 'mapPolyline'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    polylineClick: [{\n      type: Output\n    }],\n    polylineDblclick: [{\n      type: Output\n    }],\n    polylineDrag: [{\n      type: Output\n    }],\n    polylineDragend: [{\n      type: Output\n    }],\n    polylineDragstart: [{\n      type: Output\n    }],\n    polylineMousedown: [{\n      type: Output\n    }],\n    polylineMousemove: [{\n      type: Output\n    }],\n    polylineMouseout: [{\n      type: Output\n    }],\n    polylineMouseover: [{\n      type: Output\n    }],\n    polylineMouseup: [{\n      type: Output\n    }],\n    polylineRightclick: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\n\n\nclass MapRectangle {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._bounds = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n     */\n\n    this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n     */\n\n    this.rectangleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n     */\n\n    this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n     */\n\n    this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n     */\n\n    this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n     */\n\n    this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n     */\n\n    this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n     */\n\n    this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n     */\n\n    this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n     */\n\n    this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n     */\n\n    this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n     */\n\n    this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n\n  set options(options) {\n    this._options.next(options || {});\n  }\n\n  set bounds(bounds) {\n    this._bounds.next(bounds);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.rectangle = new google.maps.Rectangle(options);\n        });\n\n        this._assertInitialized();\n\n        this.rectangle.setMap(this._map.googleMap);\n\n        this._eventManager.setTarget(this.rectangle);\n      });\n\n      this._watchForOptionsChanges();\n\n      this._watchForBoundsChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.rectangle) {\n      this.rectangle.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n   */\n\n\n  getBounds() {\n    this._assertInitialized();\n\n    return this.rectangle.getBounds();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n   */\n\n\n  getDraggable() {\n    this._assertInitialized();\n\n    return this.rectangle.getDraggable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n   */\n\n\n  getEditable() {\n    this._assertInitialized();\n\n    return this.rectangle.getEditable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n   */\n\n\n  getVisible() {\n    this._assertInitialized();\n\n    return this.rectangle.getVisible();\n  }\n\n  _combineOptions() {\n    return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n      const combinedOptions = { ...options,\n        bounds: bounds || options.bounds\n      };\n      return combinedOptions;\n    }));\n  }\n\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n\n      this.rectangle.setOptions(options);\n    });\n  }\n\n  _watchForBoundsChanges() {\n    this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n      if (bounds) {\n        this._assertInitialized();\n\n        this.rectangle.setBounds(bounds);\n      }\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.rectangle) {\n        throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' + 'Please wait for the Rectangle to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapRectangle.ɵfac = function MapRectangle_Factory(t) {\n  return new (t || MapRectangle)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapRectangle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapRectangle,\n  selectors: [[\"map-rectangle\"]],\n  inputs: {\n    options: \"options\",\n    bounds: \"bounds\"\n  },\n  outputs: {\n    boundsChanged: \"boundsChanged\",\n    rectangleClick: \"rectangleClick\",\n    rectangleDblclick: \"rectangleDblclick\",\n    rectangleDrag: \"rectangleDrag\",\n    rectangleDragend: \"rectangleDragend\",\n    rectangleDragstart: \"rectangleDragstart\",\n    rectangleMousedown: \"rectangleMousedown\",\n    rectangleMousemove: \"rectangleMousemove\",\n    rectangleMouseout: \"rectangleMouseout\",\n    rectangleMouseover: \"rectangleMouseover\",\n    rectangleMouseup: \"rectangleMouseup\",\n    rectangleRightclick: \"rectangleRightclick\"\n  },\n  exportAs: [\"mapRectangle\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapRectangle, [{\n    type: Directive,\n    args: [{\n      selector: 'map-rectangle',\n      exportAs: 'mapRectangle'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    boundsChanged: [{\n      type: Output\n    }],\n    rectangleClick: [{\n      type: Output\n    }],\n    rectangleDblclick: [{\n      type: Output\n    }],\n    rectangleDrag: [{\n      type: Output\n    }],\n    rectangleDragend: [{\n      type: Output\n    }],\n    rectangleDragstart: [{\n      type: Output\n    }],\n    rectangleMousedown: [{\n      type: Output\n    }],\n    rectangleMousemove: [{\n      type: Output\n    }],\n    rectangleMouseout: [{\n      type: Output\n    }],\n    rectangleMouseover: [{\n      type: Output\n    }],\n    rectangleMouseup: [{\n      type: Output\n    }],\n    rectangleRightclick: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\n\n\nclass MapTrafficLayer {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._autoRefresh = new BehaviorSubject(true);\n    this._destroyed = new Subject();\n  }\n  /**\n   * Whether the traffic layer refreshes with updated information automatically.\n   */\n\n\n  set autoRefresh(autoRefresh) {\n    this._autoRefresh.next(autoRefresh);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        this._ngZone.runOutsideAngular(() => {\n          this.trafficLayer = new google.maps.TrafficLayer(options);\n        });\n\n        this._assertInitialized();\n\n        this.trafficLayer.setMap(this._map.googleMap);\n      });\n\n      this._watchForAutoRefreshChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.trafficLayer) {\n      this.trafficLayer.setMap(null);\n    }\n  }\n\n  _combineOptions() {\n    return this._autoRefresh.pipe(map(autoRefresh => {\n      const combinedOptions = {\n        autoRefresh\n      };\n      return combinedOptions;\n    }));\n  }\n\n  _watchForAutoRefreshChanges() {\n    this._combineOptions().pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n\n      this.trafficLayer.setOptions(options);\n    });\n  }\n\n  _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n\n    if (!this.trafficLayer) {\n      throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' + 'Please wait for the Traffic Layer to load before trying to interact with it.');\n    }\n  }\n\n}\n\nMapTrafficLayer.ɵfac = function MapTrafficLayer_Factory(t) {\n  return new (t || MapTrafficLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapTrafficLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapTrafficLayer,\n  selectors: [[\"map-traffic-layer\"]],\n  inputs: {\n    autoRefresh: \"autoRefresh\"\n  },\n  exportAs: [\"mapTrafficLayer\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapTrafficLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-traffic-layer',\n      exportAs: 'mapTrafficLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    autoRefresh: [{\n      type: Input\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\n\n\nclass MapTransitLayer extends MapBaseLayer {\n  _initializeObject() {\n    this.transitLayer = new google.maps.TransitLayer();\n  }\n\n  _setMap() {\n    this._assertLayerInitialized();\n\n    this.transitLayer.setMap(this._map.googleMap);\n  }\n\n  _unsetMap() {\n    if (this.transitLayer) {\n      this.transitLayer.setMap(null);\n    }\n  }\n\n  _assertLayerInitialized() {\n    if (!this.transitLayer) {\n      throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n\n}\n\nMapTransitLayer.ɵfac = /* @__PURE__ */function () {\n  let ɵMapTransitLayer_BaseFactory;\n  return function MapTransitLayer_Factory(t) {\n    return (ɵMapTransitLayer_BaseFactory || (ɵMapTransitLayer_BaseFactory = i0.ɵɵgetInheritedFactory(MapTransitLayer)))(t || MapTransitLayer);\n  };\n}();\n\nMapTransitLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapTransitLayer,\n  selectors: [[\"map-transit-layer\"]],\n  exportAs: [\"mapTransitLayer\"],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapTransitLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-transit-layer',\n      exportAs: 'mapTransitLayer'\n    }]\n  }], null, null);\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\n\n\nclass MapHeatmapLayer {\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n  }\n  /**\n   * Data shown on the heatmap.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n\n\n  set data(data) {\n    this._data = data;\n  }\n  /**\n   * Options used to configure the heatmap. See:\n   * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n   */\n\n\n  set options(options) {\n    this._options = options;\n  }\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      if (!window.google?.maps?.visualization && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' + 'Please install the Google Maps JavaScript API with the \"visualization\" library: ' + 'https://developers.google.com/maps/documentation/javascript/visualization');\n      } // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n\n\n      this._ngZone.runOutsideAngular(() => {\n        this.heatmap = new google.maps.visualization.HeatmapLayer(this._combineOptions());\n      });\n\n      this._assertInitialized();\n\n      this.heatmap.setMap(this._googleMap.googleMap);\n    }\n  }\n\n  ngOnChanges(changes) {\n    const {\n      _data,\n      heatmap\n    } = this;\n\n    if (heatmap) {\n      if (changes['options']) {\n        heatmap.setOptions(this._combineOptions());\n      }\n\n      if (changes['data'] && _data !== undefined) {\n        heatmap.setData(this._normalizeData(_data));\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.heatmap) {\n      this.heatmap.setMap(null);\n    }\n  }\n  /**\n   * Gets the data that is currently shown on the heatmap.\n   * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n   */\n\n\n  getData() {\n    this._assertInitialized();\n\n    return this.heatmap.getData();\n  }\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n\n\n  _combineOptions() {\n    const options = this._options || {};\n    return { ...options,\n      data: this._normalizeData(this._data || options.data || []),\n      map: this._googleMap.googleMap\n    };\n  }\n  /**\n   * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n   * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n   * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n   * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n   * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n   * convert it to a `LatLng` object before passing it off to Google Maps.\n   */\n\n\n  _normalizeData(data) {\n    const result = [];\n    data.forEach(item => {\n      result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n    });\n    return result;\n  }\n  /** Asserts that the heatmap object has been initialized. */\n\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.heatmap) {\n        throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' + 'initialized. Please wait for the heatmap to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapHeatmapLayer.ɵfac = function MapHeatmapLayer_Factory(t) {\n  return new (t || MapHeatmapLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapHeatmapLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapHeatmapLayer,\n  selectors: [[\"map-heatmap-layer\"]],\n  inputs: {\n    data: \"data\",\n    options: \"options\"\n  },\n  exportAs: [\"mapHeatmapLayer\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapHeatmapLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-heatmap-layer',\n      exportAs: 'mapHeatmapLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }]\n  });\n})();\n/** Asserts that an object is a `LatLngLiteral`. */\n\n\nfunction isLatLngLiteral(value) {\n  return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst COMPONENTS = [GoogleMap, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapGroundOverlay, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer, MapHeatmapLayer];\n\nclass GoogleMapsModule {}\n\nGoogleMapsModule.ɵfac = function GoogleMapsModule_Factory(t) {\n  return new (t || GoogleMapsModule)();\n};\n\nGoogleMapsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GoogleMapsModule\n});\nGoogleMapsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleMapsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: COMPONENTS,\n      exports: COMPONENTS\n    }]\n  }], null, null);\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\n\n\nclass MapDirectionsService {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsService.route\n   */\n\n\n  route(request) {\n    return new Observable(observer => {\n      // Initialize the `DirectionsService` lazily since the Google Maps API may\n      // not have been loaded when the provider is instantiated.\n      if (!this._directionsService) {\n        this._directionsService = new google.maps.DirectionsService();\n      }\n\n      this._directionsService.route(request, (result, status) => {\n        this._ngZone.run(() => {\n          observer.next({\n            result: result || undefined,\n            status\n          });\n          observer.complete();\n        });\n      });\n    });\n  }\n\n}\n\nMapDirectionsService.ɵfac = function MapDirectionsService_Factory(t) {\n  return new (t || MapDirectionsService)(i0.ɵɵinject(i0.NgZone));\n};\n\nMapDirectionsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MapDirectionsService,\n  factory: MapDirectionsService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapDirectionsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\n\n\nclass MapGeocoder {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n   */\n\n\n  geocode(request) {\n    return new Observable(observer => {\n      // Initialize the `Geocoder` lazily since the Google Maps API may\n      // not have been loaded when the provider is instantiated.\n      if (!this._geocoder) {\n        this._geocoder = new google.maps.Geocoder();\n      }\n\n      this._geocoder.geocode(request, (results, status) => {\n        this._ngZone.run(() => {\n          observer.next({\n            results: results || [],\n            status\n          });\n          observer.complete();\n        });\n      });\n    });\n  }\n\n}\n\nMapGeocoder.ɵfac = function MapGeocoder_Factory(t) {\n  return new (t || MapGeocoder)(i0.ɵɵinject(i0.NgZone));\n};\n\nMapGeocoder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MapGeocoder,\n  factory: MapGeocoder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapGeocoder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { GoogleMap, GoogleMapsModule, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapEventManager, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };","map":{"version":3,"names":["i0","EventEmitter","PLATFORM_ID","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Output","Directive","ContentChildren","NgModule","Injectable","isPlatformBrowser","BehaviorSubject","Observable","Subject","combineLatest","switchMap","take","map","takeUntil","MapEventManager","constructor","_ngZone","_pending","_listeners","_targetStream","undefined","_clearListeners","listener","remove","getLazyEmitter","name","pipe","target","observable","observer","push","addListener","event","run","next","setTarget","currentTarget","value","forEach","subscriber","subscribe","destroy","complete","DEFAULT_OPTIONS","center","lat","lng","zoom","mapTypeId","DEFAULT_HEIGHT","DEFAULT_WIDTH","GoogleMap","_elementRef","platformId","_eventManager","height","width","_options","mapInitialized","authFailure","boundsChanged","centerChanged","mapClick","mapDblclick","mapDrag","mapDragend","mapDragstart","headingChanged","idle","maptypeidChanged","mapMousemove","mapMouseout","mapMouseover","projectionChanged","mapRightclick","tilesloaded","tiltChanged","zoomChanged","_isBrowser","googleMapsWindow","window","google","ngDevMode","Error","_existingAuthFailureCallback","gm_authFailure","emit","_center","_zoom","options","ngOnChanges","changes","_setSize","googleMap","setOptions","_combineOptions","setCenter","setZoom","setMapTypeId","ngOnInit","_mapEl","nativeElement","querySelector","runOutsideAngular","maps","Map","ngOnDestroy","fitBounds","bounds","padding","_assertInitialized","panBy","x","y","panTo","latLng","panToBounds","latLngBounds","getBounds","getCenter","getClickableIcons","getHeading","getMapTypeId","getProjection","getStreetView","getTilt","getZoom","controls","data","mapTypes","overlayMapTypes","styles","style","coerceCssPixelValue","ɵfac","ElementRef","NgZone","ɵcmp","type","args","selector","exportAs","changeDetection","OnPush","template","encapsulation","None","Object","decorators","cssUnitsPattern","test","MapBaseLayer","_map","_initializeObject","_setMap","_unsetMap","ɵdir","MapBicyclingLayer","bicyclingLayer","BicyclingLayer","_assertLayerInitialized","setMap","MapCircle","_radius","_destroyed","circleClick","circleDblclick","circleDrag","circleDragend","circleDragstart","circleMousedown","circleMousemove","circleMouseout","circleMouseover","circleMouseup","radiusChanged","circleRightclick","radius","circle","Circle","_watchForOptionsChanges","_watchForCenterChanges","_watchForRadiusChanges","getDraggable","getEditable","getRadius","getVisible","combinedOptions","setRadius","MapDirectionsRenderer","_googleMap","directionsChanged","directions","_directions","directionsRenderer","DirectionsRenderer","setDirections","getDirections","getPanel","getRouteIndex","MapGroundOverlay","_opacity","_url","_bounds","clickable","url","opacity","groundOverlay","GroundOverlay","getValue","_watchForOpacityChanges","_watchForUrlChanges","getOpacity","getUrl","setOpacity","overlay","set","MapInfoWindow","_position","_destroy","closeclick","contentChanged","domready","positionChanged","zindexChanged","position","combinedOptionsChanges","infoWindow","InfoWindow","_watchForPositionChanges","close","getContent","getPosition","getZIndex","open","anchor","shouldFocus","anchorObject","getAnchor","get","display","content","setPosition","host","MapKmlLayer","kmlClick","defaultviewportChanged","statusChanged","kmlLayer","KmlLayer","getDefaultViewport","getMetadata","getStatus","setUrl","DEFAULT_MARKER_OPTIONS","MapMarker","animationChanged","clickableChanged","cursorChanged","draggableChanged","flatChanged","iconChanged","mapMousedown","mapMouseup","shapeChanged","titleChanged","visibleChanged","title","_title","label","_label","_clickable","icon","_icon","visible","_visible","marker","Marker","setTitle","setLabel","setClickable","setIcon","setVisible","getAnimation","getClickable","getCursor","getIcon","getLabel","getShape","getTitle","DEFAULT_CLUSTERER_OPTIONS","MapMarkerClusterer","_currentMarkers","Set","ariaLabelFn","clusteringbegin","clusteringend","clusterClick","_canInitialize","averageCenter","_averageCenter","batchSizeIE","_batchSizeIE","calculator","_calculator","clusterClass","_clusterClass","enableRetinaIcons","_enableRetinaIcons","gridSize","_gridSize","ignoreHidden","_ignoreHidden","imageExtension","_imageExtension","imagePath","_imagePath","imageSizes","_imageSizes","maxZoom","_maxZoom","minimumClusterSize","_minimumClusterSize","_styles","zIndex","_zIndex","zoomOnClick","_zoomOnClick","MarkerClusterer","markerClusterer","ngAfterContentInit","_watchForMarkerChanges","clusterer","setAverageCenter","setBatchSizeIE","setCalculator","setClusterClass","setEnableRetinaIcons","setGridSize","setIgnoreHidden","setImageExtension","setImagePath","setImageSizes","setMaxZoom","setMinimumClusterSize","setStyles","setZIndex","setZoomOnClick","fitMapToMarkers","getAverageCenter","getBatchSizeIE","getCalculator","getClusterClass","getClusters","getEnableRetinaIcons","getGridSize","getIgnoreHidden","getImageExtension","getImagePath","getImageSizes","getMaxZoom","getMinimumClusterSize","getStyles","getTotalClusters","getTotalMarkers","getZoomOnClick","batchSize","initialMarkers","_getInternalMarkers","_markers","toArray","add","addMarkers","markerComponents","newMarkers","markersToAdd","markersToRemove","Array","from","has","removeMarkers","repaint","delete","markers","filter","markerComponent","descendants","MapPolygon","_paths","polygonClick","polygonDblclick","polygonDrag","polygonDragend","polygonDragstart","polygonMousedown","polygonMousemove","polygonMouseout","polygonMouseover","polygonMouseup","polygonRightclick","paths","polygon","Polygon","_watchForPathChanges","getPath","getPaths","setPaths","MapPolyline","_path","polylineClick","polylineDblclick","polylineDrag","polylineDragend","polylineDragstart","polylineMousedown","polylineMousemove","polylineMouseout","polylineMouseover","polylineMouseup","polylineRightclick","path","polyline","Polyline","setPath","MapRectangle","rectangleClick","rectangleDblclick","rectangleDrag","rectangleDragend","rectangleDragstart","rectangleMousedown","rectangleMousemove","rectangleMouseout","rectangleMouseover","rectangleMouseup","rectangleRightclick","rectangle","Rectangle","_watchForBoundsChanges","setBounds","MapTrafficLayer","_autoRefresh","autoRefresh","trafficLayer","TrafficLayer","_watchForAutoRefreshChanges","MapTransitLayer","transitLayer","TransitLayer","MapHeatmapLayer","_data","visualization","heatmap","HeatmapLayer","setData","_normalizeData","getData","result","item","isLatLngLiteral","LatLng","COMPONENTS","GoogleMapsModule","ɵmod","ɵinj","declarations","exports","MapDirectionsService","route","request","_directionsService","DirectionsService","status","ɵprov","providedIn","MapGeocoder","geocode","_geocoder","Geocoder","results"],"sources":["G:/projects/projects/private/github/FFWHydrantenMap/src/hydmap-ng/node_modules/@angular/google-maps/fesm2020/google-maps.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, Directive, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nclass MapEventManager {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        /** Pending listeners that were added before the target was set. */\n        this._pending = [];\n        this._listeners = [];\n        this._targetStream = new BehaviorSubject(undefined);\n    }\n    /** Clears all currently-registered event listeners. */\n    _clearListeners() {\n        for (const listener of this._listeners) {\n            listener.remove();\n        }\n        this._listeners = [];\n    }\n    /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n    getLazyEmitter(name) {\n        return this._targetStream.pipe(switchMap(target => {\n            const observable = new Observable(observer => {\n                // If the target hasn't been initialized yet, cache the observer so it can be added later.\n                if (!target) {\n                    this._pending.push({ observable, observer });\n                    return undefined;\n                }\n                const listener = target.addListener(name, (event) => {\n                    this._ngZone.run(() => observer.next(event));\n                });\n                this._listeners.push(listener);\n                return () => listener.remove();\n            });\n            return observable;\n        }));\n    }\n    /** Sets the current target that the manager should bind events to. */\n    setTarget(target) {\n        const currentTarget = this._targetStream.value;\n        if (target === currentTarget) {\n            return;\n        }\n        // Clear the listeners from the pre-existing target.\n        if (currentTarget) {\n            this._clearListeners();\n            this._pending = [];\n        }\n        this._targetStream.next(target);\n        // Add the listeners that were bound before the map was initialized.\n        this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n        this._pending = [];\n    }\n    /** Destroys the manager and clears the event listeners. */\n    destroy() {\n        this._clearListeners();\n        this._pending = [];\n        this._targetStream.complete();\n    }\n}\n\n/// <reference types=\"google.maps\" />\n/** default options set to the Googleplex */\nconst DEFAULT_OPTIONS = {\n    center: { lat: 37.421995, lng: -122.084092 },\n    zoom: 17,\n    // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n    mapTypeId: 'roadmap',\n};\n/** Arbitrary default height for the map element */\nconst DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nconst DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\nclass GoogleMap {\n    constructor(_elementRef, _ngZone, platformId) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n        this.height = DEFAULT_HEIGHT;\n        /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n        this.width = DEFAULT_WIDTH;\n        this._options = DEFAULT_OPTIONS;\n        /** Event emitted when the map is initialized. */\n        this.mapInitialized = new EventEmitter();\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n         */\n        this.authFailure = new EventEmitter();\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n         */\n        this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n         */\n        this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n         */\n        this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n         */\n        this.idle = this._eventManager.getLazyEmitter('idle');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n         */\n        this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n         */\n        this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n         */\n        this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n         */\n        this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n         */\n        this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n         */\n        this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n         */\n        this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n         */\n        this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n         */\n        this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n        this._isBrowser = isPlatformBrowser(platformId);\n        if (this._isBrowser) {\n            const googleMapsWindow = window;\n            if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Namespace google not found, cannot construct embedded google ' +\n                    'map. Please install the Google Maps JavaScript API: ' +\n                    'https://developers.google.com/maps/documentation/javascript/' +\n                    'tutorial#Loading_the_Maps_API');\n            }\n            this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n            googleMapsWindow.gm_authFailure = () => {\n                if (this._existingAuthFailureCallback) {\n                    this._existingAuthFailureCallback();\n                }\n                this.authFailure.emit();\n            };\n        }\n    }\n    set center(center) {\n        this._center = center;\n    }\n    set zoom(zoom) {\n        this._zoom = zoom;\n    }\n    set options(options) {\n        this._options = options || DEFAULT_OPTIONS;\n    }\n    ngOnChanges(changes) {\n        if (changes['height'] || changes['width']) {\n            this._setSize();\n        }\n        const googleMap = this.googleMap;\n        if (googleMap) {\n            if (changes['options']) {\n                googleMap.setOptions(this._combineOptions());\n            }\n            if (changes['center'] && this._center) {\n                googleMap.setCenter(this._center);\n            }\n            // Note that the zoom can be zero.\n            if (changes['zoom'] && this._zoom != null) {\n                googleMap.setZoom(this._zoom);\n            }\n            if (changes['mapTypeId'] && this.mapTypeId) {\n                googleMap.setMapTypeId(this.mapTypeId);\n            }\n        }\n    }\n    ngOnInit() {\n        // It should be a noop during server-side rendering.\n        if (this._isBrowser) {\n            this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n            this._setSize();\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.googleMap = new google.maps.Map(this._mapEl, this._combineOptions());\n            });\n            this._eventManager.setTarget(this.googleMap);\n            this.mapInitialized.emit(this.googleMap);\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        if (this._isBrowser) {\n            const googleMapsWindow = window;\n            googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n        }\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n     */\n    fitBounds(bounds, padding) {\n        this._assertInitialized();\n        this.googleMap.fitBounds(bounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n     */\n    panBy(x, y) {\n        this._assertInitialized();\n        this.googleMap.panBy(x, y);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n     */\n    panTo(latLng) {\n        this._assertInitialized();\n        this.googleMap.panTo(latLng);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n     */\n    panToBounds(latLngBounds, padding) {\n        this._assertInitialized();\n        this.googleMap.panToBounds(latLngBounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.googleMap.getBounds() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n     */\n    getCenter() {\n        this._assertInitialized();\n        return this.googleMap.getCenter();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n     */\n    getClickableIcons() {\n        this._assertInitialized();\n        return this.googleMap.getClickableIcons();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n     */\n    getHeading() {\n        this._assertInitialized();\n        return this.googleMap.getHeading();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n     */\n    getMapTypeId() {\n        this._assertInitialized();\n        return this.googleMap.getMapTypeId();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n     */\n    getProjection() {\n        this._assertInitialized();\n        return this.googleMap.getProjection() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n     */\n    getStreetView() {\n        this._assertInitialized();\n        return this.googleMap.getStreetView();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n     */\n    getTilt() {\n        this._assertInitialized();\n        return this.googleMap.getTilt();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n     */\n    getZoom() {\n        this._assertInitialized();\n        return this.googleMap.getZoom();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n     */\n    get controls() {\n        this._assertInitialized();\n        return this.googleMap.controls;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n     */\n    get data() {\n        this._assertInitialized();\n        return this.googleMap.data;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n     */\n    get mapTypes() {\n        this._assertInitialized();\n        return this.googleMap.mapTypes;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n     */\n    get overlayMapTypes() {\n        this._assertInitialized();\n        return this.googleMap.overlayMapTypes;\n    }\n    _setSize() {\n        if (this._mapEl) {\n            const styles = this._mapEl.style;\n            styles.height =\n                this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n            styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n        }\n    }\n    /** Combines the center and zoom and the other map options into a single object */\n    _combineOptions() {\n        const options = this._options || {};\n        return {\n            ...options,\n            // It's important that we set **some** kind of `center` and `zoom`, otherwise\n            // Google Maps will render a blank rectangle which looks broken.\n            center: this._center || options.center || DEFAULT_OPTIONS.center,\n            zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n            // Passing in an undefined `mapTypeId` seems to break tile loading\n            // so make sure that we have some kind of default (see #22082).\n            mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId,\n        };\n    }\n    /** Asserts that the map has been initialized. */\n    _assertInitialized() {\n        if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n    }\n}\nGoogleMap.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GoogleMap, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nGoogleMap.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: GoogleMap, selector: \"google-map\", inputs: { height: \"height\", width: \"width\", mapTypeId: \"mapTypeId\", center: \"center\", zoom: \"zoom\", options: \"options\" }, outputs: { mapInitialized: \"mapInitialized\", authFailure: \"authFailure\", boundsChanged: \"boundsChanged\", centerChanged: \"centerChanged\", mapClick: \"mapClick\", mapDblclick: \"mapDblclick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", mapDragstart: \"mapDragstart\", headingChanged: \"headingChanged\", idle: \"idle\", maptypeidChanged: \"maptypeidChanged\", mapMousemove: \"mapMousemove\", mapMouseout: \"mapMouseout\", mapMouseover: \"mapMouseover\", projectionChanged: \"projectionChanged\", mapRightclick: \"mapRightclick\", tilesloaded: \"tilesloaded\", tiltChanged: \"tiltChanged\", zoomChanged: \"zoomChanged\" }, exportAs: [\"googleMap\"], usesOnChanges: true, ngImport: i0, template: '<div class=\"map-container\"></div><ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GoogleMap, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'google-map',\n                    exportAs: 'googleMap',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], mapTypeId: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], zoom: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], mapInitialized: [{\n                type: Output\n            }], authFailure: [{\n                type: Output\n            }], boundsChanged: [{\n                type: Output\n            }], centerChanged: [{\n                type: Output\n            }], mapClick: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }], mapDrag: [{\n                type: Output\n            }], mapDragend: [{\n                type: Output\n            }], mapDragstart: [{\n                type: Output\n            }], headingChanged: [{\n                type: Output\n            }], idle: [{\n                type: Output\n            }], maptypeidChanged: [{\n                type: Output\n            }], mapMousemove: [{\n                type: Output\n            }], mapMouseout: [{\n                type: Output\n            }], mapMouseover: [{\n                type: Output\n            }], projectionChanged: [{\n                type: Output\n            }], mapRightclick: [{\n                type: Output\n            }], tilesloaded: [{\n                type: Output\n            }], tiltChanged: [{\n                type: Output\n            }], zoomChanged: [{\n                type: Output\n            }] } });\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n\n/// <reference types=\"google.maps\" />\nclass MapBaseLayer {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._ngZone.runOutsideAngular(() => {\n                this._initializeObject();\n            });\n            this._assertInitialized();\n            this._setMap();\n        }\n    }\n    ngOnDestroy() {\n        this._unsetMap();\n    }\n    _assertInitialized() {\n        if (!this._map.googleMap) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n    }\n    _initializeObject() { }\n    _setMap() { }\n    _unsetMap() { }\n}\nMapBaseLayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapBaseLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapBaseLayer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapBaseLayer, selector: \"map-base-layer\", exportAs: [\"mapBaseLayer\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapBaseLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-base-layer',\n                    exportAs: 'mapBaseLayer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\nclass MapBicyclingLayer extends MapBaseLayer {\n    _initializeObject() {\n        this.bicyclingLayer = new google.maps.BicyclingLayer();\n    }\n    _setMap() {\n        this._assertLayerInitialized();\n        this.bicyclingLayer.setMap(this._map.googleMap);\n    }\n    _unsetMap() {\n        if (this.bicyclingLayer) {\n            this.bicyclingLayer.setMap(null);\n        }\n    }\n    _assertLayerInitialized() {\n        if (!this.bicyclingLayer) {\n            throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n                'Please wait for the Transit Layer to load before trying to interact with it.');\n        }\n    }\n}\nMapBicyclingLayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapBicyclingLayer, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMapBicyclingLayer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapBicyclingLayer, selector: \"map-bicycling-layer\", exportAs: [\"mapBicyclingLayer\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapBicyclingLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-bicycling-layer',\n                    exportAs: 'mapBicyclingLayer',\n                }]\n        }] });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\nclass MapCircle {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._center = new BehaviorSubject(undefined);\n        this._radius = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n         */\n        this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n         */\n        this.circleClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n         */\n        this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n         */\n        this.circleDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n         */\n        this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n         */\n        this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n         */\n        this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n         */\n        this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n         */\n        this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n         */\n        this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n         */\n        this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n         */\n        this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n         */\n        this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set center(center) {\n        this._center.next(center);\n    }\n    set radius(radius) {\n        this._radius.next(radius);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.circle = new google.maps.Circle(options);\n                });\n                this._assertInitialized();\n                this.circle.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.circle);\n            });\n            this._watchForOptionsChanges();\n            this._watchForCenterChanges();\n            this._watchForRadiusChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.circle) {\n            this.circle.setMap(null);\n        }\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.circle.getBounds();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n     */\n    getCenter() {\n        this._assertInitialized();\n        return this.circle.getCenter();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.circle.getDraggable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.circle.getEditable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n     */\n    getRadius() {\n        this._assertInitialized();\n        return this.circle.getRadius();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.circle.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._center, this._radius]).pipe(map(([options, center, radius]) => {\n            const combinedOptions = {\n                ...options,\n                center: center || options.center,\n                radius: radius !== undefined ? radius : options.radius,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.circle.setOptions(options);\n        });\n    }\n    _watchForCenterChanges() {\n        this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n            if (center) {\n                this._assertInitialized();\n                this.circle.setCenter(center);\n            }\n        });\n    }\n    _watchForRadiusChanges() {\n        this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n            if (radius !== undefined) {\n                this._assertInitialized();\n                this.circle.setRadius(radius);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.circle) {\n                throw Error('Cannot interact with a Google Map Circle before it has been ' +\n                    'initialized. Please wait for the Circle to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapCircle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapCircle, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapCircle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapCircle, selector: \"map-circle\", inputs: { options: \"options\", center: \"center\", radius: \"radius\" }, outputs: { centerChanged: \"centerChanged\", circleClick: \"circleClick\", circleDblclick: \"circleDblclick\", circleDrag: \"circleDrag\", circleDragend: \"circleDragend\", circleDragstart: \"circleDragstart\", circleMousedown: \"circleMousedown\", circleMousemove: \"circleMousemove\", circleMouseout: \"circleMouseout\", circleMouseover: \"circleMouseover\", circleMouseup: \"circleMouseup\", radiusChanged: \"radiusChanged\", circleRightclick: \"circleRightclick\" }, exportAs: [\"mapCircle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapCircle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-circle',\n                    exportAs: 'mapCircle',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], centerChanged: [{\n                type: Output\n            }], circleClick: [{\n                type: Output\n            }], circleDblclick: [{\n                type: Output\n            }], circleDrag: [{\n                type: Output\n            }], circleDragend: [{\n                type: Output\n            }], circleDragstart: [{\n                type: Output\n            }], circleMousedown: [{\n                type: Output\n            }], circleMousemove: [{\n                type: Output\n            }], circleMouseout: [{\n                type: Output\n            }], circleMouseover: [{\n                type: Output\n            }], circleMouseup: [{\n                type: Output\n            }], radiusChanged: [{\n                type: Output\n            }], circleRightclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\nclass MapDirectionsRenderer {\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/directions\n         * #DirectionsRenderer.directions_changed\n         */\n        this.directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions.directions\n     */\n    set directions(directions) {\n        this._directions = directions;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.directionsRenderer = new google.maps.DirectionsRenderer(this._combineOptions());\n            });\n            this._assertInitialized();\n            this.directionsRenderer.setMap(this._googleMap.googleMap);\n            this._eventManager.setTarget(this.directionsRenderer);\n        }\n    }\n    ngOnChanges(changes) {\n        if (this.directionsRenderer) {\n            if (changes['options']) {\n                this.directionsRenderer.setOptions(this._combineOptions());\n            }\n            if (changes['directions'] && this._directions !== undefined) {\n                this.directionsRenderer.setDirections(this._directions);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        if (this.directionsRenderer) {\n            this.directionsRenderer.setMap(null);\n        }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getDirections\n     */\n    getDirections() {\n        this._assertInitialized();\n        return this.directionsRenderer.getDirections();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getPanel\n     */\n    getPanel() {\n        this._assertInitialized();\n        return this.directionsRenderer.getPanel();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getRouteIndex\n     */\n    getRouteIndex() {\n        this._assertInitialized();\n        return this.directionsRenderer.getRouteIndex();\n    }\n    _combineOptions() {\n        const options = this._options || {};\n        return {\n            ...options,\n            directions: this._directions || options.directions,\n            map: this._googleMap.googleMap,\n        };\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.directionsRenderer) {\n                throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' +\n                    'initialized. Please wait for the Directions Renderer to load before trying ' +\n                    'to interact with it.');\n            }\n        }\n    }\n}\nMapDirectionsRenderer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapDirectionsRenderer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapDirectionsRenderer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapDirectionsRenderer, selector: \"map-directions-renderer\", inputs: { directions: \"directions\", options: \"options\" }, outputs: { directionsChanged: \"directionsChanged\" }, exportAs: [\"mapDirectionsRenderer\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapDirectionsRenderer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-directions-renderer',\n                    exportAs: 'mapDirectionsRenderer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { directions: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], directionsChanged: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\nclass MapGroundOverlay {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._opacity = new BehaviorSubject(1);\n        this._url = new BehaviorSubject('');\n        this._bounds = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /** Whether the overlay is clickable */\n        this.clickable = false;\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    }\n    /** URL of the image that will be shown in the overlay. */\n    set url(url) {\n        this._url.next(url);\n    }\n    /** Bounds for the overlay. */\n    get bounds() {\n        return this._bounds.value;\n    }\n    set bounds(bounds) {\n        this._bounds.next(bounds);\n    }\n    /** Opacity of the overlay. */\n    set opacity(opacity) {\n        this._opacity.next(opacity);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            // The ground overlay setup is slightly different from the other Google Maps objects in that\n            // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n            // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n            this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n                if (this.groundOverlay) {\n                    this.groundOverlay.setMap(null);\n                    this.groundOverlay = undefined;\n                }\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                if (bounds) {\n                    this._ngZone.runOutsideAngular(() => {\n                        this.groundOverlay = new google.maps.GroundOverlay(this._url.getValue(), bounds, {\n                            clickable: this.clickable,\n                            opacity: this._opacity.value,\n                        });\n                    });\n                    this._assertInitialized();\n                    this.groundOverlay.setMap(this._map.googleMap);\n                    this._eventManager.setTarget(this.groundOverlay);\n                }\n            });\n            this._watchForOpacityChanges();\n            this._watchForUrlChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.groundOverlay) {\n            this.groundOverlay.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.groundOverlay.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getOpacity\n     */\n    getOpacity() {\n        this._assertInitialized();\n        return this.groundOverlay.getOpacity();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getUrl\n     */\n    getUrl() {\n        this._assertInitialized();\n        return this.groundOverlay.getUrl();\n    }\n    _watchForOpacityChanges() {\n        this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n            if (opacity != null) {\n                this._assertInitialized();\n                this.groundOverlay.setOpacity(opacity);\n            }\n        });\n    }\n    _watchForUrlChanges() {\n        this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n            this._assertInitialized();\n            const overlay = this.groundOverlay;\n            overlay.set('url', url);\n            // Google Maps only redraws the overlay if we re-set the map.\n            overlay.setMap(null);\n            overlay.setMap(this._map.googleMap);\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.groundOverlay) {\n                throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n                    'Please wait for the GroundOverlay to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapGroundOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapGroundOverlay, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapGroundOverlay.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapGroundOverlay, selector: \"map-ground-overlay\", inputs: { url: \"url\", bounds: \"bounds\", clickable: \"clickable\", opacity: \"opacity\" }, outputs: { mapClick: \"mapClick\", mapDblclick: \"mapDblclick\" }, exportAs: [\"mapGroundOverlay\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapGroundOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-ground-overlay',\n                    exportAs: 'mapGroundOverlay',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { url: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], clickable: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], mapClick: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\nclass MapInfoWindow {\n    constructor(_googleMap, _elementRef, _ngZone) {\n        this._googleMap = _googleMap;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._position = new BehaviorSubject(undefined);\n        this._destroy = new Subject();\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n         */\n        this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.content_changed\n         */\n        this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n         */\n        this.domready = this._eventManager.getLazyEmitter('domready');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.position_changed\n         */\n        this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.zindex_changed\n         */\n        this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set position(position) {\n        this._position.next(position);\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            const combinedOptionsChanges = this._combineOptions();\n            combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.infoWindow = new google.maps.InfoWindow(options);\n                });\n                this._eventManager.setTarget(this.infoWindow);\n            });\n            this._watchForOptionsChanges();\n            this._watchForPositionChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroy.next();\n        this._destroy.complete();\n        // If no info window has been created on the server, we do not try closing it.\n        // On the server, an info window cannot be created and this would cause errors.\n        if (this.infoWindow) {\n            this.close();\n        }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n     */\n    close() {\n        this._assertInitialized();\n        this.infoWindow.close();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n     */\n    getContent() {\n        this._assertInitialized();\n        return this.infoWindow.getContent() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.getPosition\n     */\n    getPosition() {\n        this._assertInitialized();\n        return this.infoWindow.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.infoWindow.getZIndex();\n    }\n    /**\n     * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n     * then the position property of the options input is used instead.\n     */\n    open(anchor, shouldFocus) {\n        this._assertInitialized();\n        const anchorObject = anchor ? anchor.getAnchor() : undefined;\n        // Prevent the info window from initializing when trying to reopen on the same anchor.\n        // Note that when the window is opened for the first time, the anchor will always be\n        // undefined. If that's the case, we have to allow it to open in order to handle the\n        // case where the window doesn't have an anchor, but is placed at a particular position.\n        if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n            this._elementRef.nativeElement.style.display = '';\n            // The config is cast to `any`, because the internal typings are out of date.\n            this.infoWindow.open({\n                map: this._googleMap.googleMap,\n                anchor: anchorObject,\n                shouldFocus,\n            });\n        }\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n            const combinedOptions = {\n                ...options,\n                position: position || options.position,\n                content: this._elementRef.nativeElement,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n            this._assertInitialized();\n            this.infoWindow.setOptions(options);\n        });\n    }\n    _watchForPositionChanges() {\n        this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n            if (position) {\n                this._assertInitialized();\n                this.infoWindow.setPosition(position);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.infoWindow) {\n                throw Error('Cannot interact with a Google Map Info Window before it has been ' +\n                    'initialized. Please wait for the Info Window to load before trying to interact with ' +\n                    'it.');\n            }\n        }\n    }\n}\nMapInfoWindow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapInfoWindow, deps: [{ token: GoogleMap }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapInfoWindow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapInfoWindow, selector: \"map-info-window\", inputs: { options: \"options\", position: \"position\" }, outputs: { closeclick: \"closeclick\", contentChanged: \"contentChanged\", domready: \"domready\", positionChanged: \"positionChanged\", zindexChanged: \"zindexChanged\" }, host: { styleAttribute: \"display: none\" }, exportAs: [\"mapInfoWindow\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapInfoWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-info-window',\n                    exportAs: 'mapInfoWindow',\n                    host: { 'style': 'display: none' },\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], closeclick: [{\n                type: Output\n            }], contentChanged: [{\n                type: Output\n            }], domready: [{\n                type: Output\n            }], positionChanged: [{\n                type: Output\n            }], zindexChanged: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\nclass MapKmlLayer {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._url = new BehaviorSubject('');\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n         */\n        this.kmlClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/kml\n         * #KmlLayer.defaultviewport_changed\n         */\n        this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n         */\n        this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set url(url) {\n        this._url.next(url);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => (this.kmlLayer = new google.maps.KmlLayer(options)));\n                this._assertInitialized();\n                this.kmlLayer.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.kmlLayer);\n            });\n            this._watchForOptionsChanges();\n            this._watchForUrlChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.kmlLayer) {\n            this.kmlLayer.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n     */\n    getDefaultViewport() {\n        this._assertInitialized();\n        return this.kmlLayer.getDefaultViewport();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n     */\n    getMetadata() {\n        this._assertInitialized();\n        return this.kmlLayer.getMetadata();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n     */\n    getStatus() {\n        this._assertInitialized();\n        return this.kmlLayer.getStatus();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n     */\n    getUrl() {\n        this._assertInitialized();\n        return this.kmlLayer.getUrl();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.kmlLayer.getZIndex();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n            const combinedOptions = {\n                ...options,\n                url: url || options.url,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            if (this.kmlLayer) {\n                this._assertInitialized();\n                this.kmlLayer.setOptions(options);\n            }\n        });\n    }\n    _watchForUrlChanges() {\n        this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n            if (url && this.kmlLayer) {\n                this._assertInitialized();\n                this.kmlLayer.setUrl(url);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.kmlLayer) {\n                throw Error('Cannot interact with a Google Map KmlLayer before it has been ' +\n                    'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapKmlLayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapKmlLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapKmlLayer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapKmlLayer, selector: \"map-kml-layer\", inputs: { options: \"options\", url: \"url\" }, outputs: { kmlClick: \"kmlClick\", defaultviewportChanged: \"defaultviewportChanged\", statusChanged: \"statusChanged\" }, exportAs: [\"mapKmlLayer\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapKmlLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-kml-layer',\n                    exportAs: 'mapKmlLayer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], url: [{\n                type: Input\n            }], kmlClick: [{\n                type: Output\n            }], defaultviewportChanged: [{\n                type: Output\n            }], statusChanged: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS = {\n    position: { lat: 37.421995, lng: -122.084092 },\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nclass MapMarker {\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n         */\n        this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n         */\n        this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n         */\n        this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n         */\n        this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n         */\n        this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n         */\n        this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n         */\n        this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n         */\n        this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n         */\n        this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n         */\n        this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n         */\n        this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n         */\n        this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n         */\n        this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n         */\n        this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n         */\n        this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n         */\n        this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    }\n    /**\n     * Title of the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n     */\n    set title(title) {\n        this._title = title;\n    }\n    /**\n     * Position of the marker. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n     */\n    set position(position) {\n        this._position = position;\n    }\n    /**\n     * Label for the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n     */\n    set label(label) {\n        this._label = label;\n    }\n    /**\n     * Whether the marker is clickable. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n     */\n    set clickable(clickable) {\n        this._clickable = clickable;\n    }\n    /**\n     * Options used to configure the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    /**\n     * Icon to be used for the marker.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n     */\n    set icon(icon) {\n        this._icon = icon;\n    }\n    /**\n     * Whether the marker is visible.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n     */\n    set visible(value) {\n        this._visible = value;\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.marker = new google.maps.Marker(this._combineOptions());\n            });\n            this._assertInitialized();\n            this.marker.setMap(this._googleMap.googleMap);\n            this._eventManager.setTarget(this.marker);\n        }\n    }\n    ngOnChanges(changes) {\n        const { marker, _title, _position, _label, _clickable, _icon, _visible } = this;\n        if (marker) {\n            if (changes['options']) {\n                marker.setOptions(this._combineOptions());\n            }\n            if (changes['title'] && _title !== undefined) {\n                marker.setTitle(_title);\n            }\n            if (changes['position'] && _position) {\n                marker.setPosition(_position);\n            }\n            if (changes['label'] && _label !== undefined) {\n                marker.setLabel(_label);\n            }\n            if (changes['clickable'] && _clickable !== undefined) {\n                marker.setClickable(_clickable);\n            }\n            if (changes['icon'] && _icon) {\n                marker.setIcon(_icon);\n            }\n            if (changes['visible'] && _visible !== undefined) {\n                marker.setVisible(_visible);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        if (this.marker) {\n            this.marker.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n     */\n    getAnimation() {\n        this._assertInitialized();\n        return this.marker.getAnimation() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n     */\n    getClickable() {\n        this._assertInitialized();\n        return this.marker.getClickable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n     */\n    getCursor() {\n        this._assertInitialized();\n        return this.marker.getCursor() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return !!this.marker.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n     */\n    getIcon() {\n        this._assertInitialized();\n        return this.marker.getIcon() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n     */\n    getLabel() {\n        this._assertInitialized();\n        return this.marker.getLabel() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n     */\n    getOpacity() {\n        this._assertInitialized();\n        return this.marker.getOpacity() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n     */\n    getPosition() {\n        this._assertInitialized();\n        return this.marker.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n     */\n    getShape() {\n        this._assertInitialized();\n        return this.marker.getShape() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n     */\n    getTitle() {\n        this._assertInitialized();\n        return this.marker.getTitle() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.marker.getVisible();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.marker.getZIndex() || null;\n    }\n    /** Gets the anchor point that can be used to attach other Google Maps objects. */\n    getAnchor() {\n        this._assertInitialized();\n        return this.marker;\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        const options = this._options || DEFAULT_MARKER_OPTIONS;\n        return {\n            ...options,\n            title: this._title || options.title,\n            position: this._position || options.position,\n            label: this._label || options.label,\n            clickable: this._clickable ?? options.clickable,\n            map: this._googleMap.googleMap,\n            icon: this._icon || options.icon,\n            visible: this._visible ?? options.visible,\n        };\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.marker) {\n                throw Error('Cannot interact with a Google Map Marker before it has been ' +\n                    'initialized. Please wait for the Marker to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapMarker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapMarker, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapMarker.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapMarker, selector: \"map-marker\", inputs: { title: \"title\", position: \"position\", label: \"label\", clickable: \"clickable\", options: \"options\", icon: \"icon\", visible: \"visible\" }, outputs: { animationChanged: \"animationChanged\", mapClick: \"mapClick\", clickableChanged: \"clickableChanged\", cursorChanged: \"cursorChanged\", mapDblclick: \"mapDblclick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", draggableChanged: \"draggableChanged\", mapDragstart: \"mapDragstart\", flatChanged: \"flatChanged\", iconChanged: \"iconChanged\", mapMousedown: \"mapMousedown\", mapMouseout: \"mapMouseout\", mapMouseover: \"mapMouseover\", mapMouseup: \"mapMouseup\", positionChanged: \"positionChanged\", mapRightclick: \"mapRightclick\", shapeChanged: \"shapeChanged\", titleChanged: \"titleChanged\", visibleChanged: \"visibleChanged\", zindexChanged: \"zindexChanged\" }, exportAs: [\"mapMarker\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapMarker, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-marker',\n                    exportAs: 'mapMarker',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { title: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], clickable: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }], animationChanged: [{\n                type: Output\n            }], mapClick: [{\n                type: Output\n            }], clickableChanged: [{\n                type: Output\n            }], cursorChanged: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }], mapDrag: [{\n                type: Output\n            }], mapDragend: [{\n                type: Output\n            }], draggableChanged: [{\n                type: Output\n            }], mapDragstart: [{\n                type: Output\n            }], flatChanged: [{\n                type: Output\n            }], iconChanged: [{\n                type: Output\n            }], mapMousedown: [{\n                type: Output\n            }], mapMouseout: [{\n                type: Output\n            }], mapMouseover: [{\n                type: Output\n            }], mapMouseup: [{\n                type: Output\n            }], positionChanged: [{\n                type: Output\n            }], mapRightclick: [{\n                type: Output\n            }], shapeChanged: [{\n                type: Output\n            }], titleChanged: [{\n                type: Output\n            }], visibleChanged: [{\n                type: Output\n            }], zindexChanged: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\nclass MapMarkerClusterer {\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._currentMarkers = new Set();\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._destroy = new Subject();\n        this.ariaLabelFn = () => '';\n        /**\n         * See\n         * googlemaps.github.io/v3-utility-library/modules/\n         * _google_markerclustererplus.html#clusteringbegin\n         */\n        this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n        /**\n         * See\n         * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n         */\n        this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n        /** Emits when a cluster has been clicked. */\n        this.clusterClick = this._eventManager.getLazyEmitter('click');\n        this._canInitialize = this._googleMap._isBrowser;\n    }\n    set averageCenter(averageCenter) {\n        this._averageCenter = averageCenter;\n    }\n    set batchSizeIE(batchSizeIE) {\n        this._batchSizeIE = batchSizeIE;\n    }\n    set calculator(calculator) {\n        this._calculator = calculator;\n    }\n    set clusterClass(clusterClass) {\n        this._clusterClass = clusterClass;\n    }\n    set enableRetinaIcons(enableRetinaIcons) {\n        this._enableRetinaIcons = enableRetinaIcons;\n    }\n    set gridSize(gridSize) {\n        this._gridSize = gridSize;\n    }\n    set ignoreHidden(ignoreHidden) {\n        this._ignoreHidden = ignoreHidden;\n    }\n    set imageExtension(imageExtension) {\n        this._imageExtension = imageExtension;\n    }\n    set imagePath(imagePath) {\n        this._imagePath = imagePath;\n    }\n    set imageSizes(imageSizes) {\n        this._imageSizes = imageSizes;\n    }\n    set maxZoom(maxZoom) {\n        this._maxZoom = maxZoom;\n    }\n    set minimumClusterSize(minimumClusterSize) {\n        this._minimumClusterSize = minimumClusterSize;\n    }\n    set styles(styles) {\n        this._styles = styles;\n    }\n    set title(title) {\n        this._title = title;\n    }\n    set zIndex(zIndex) {\n        this._zIndex = zIndex;\n    }\n    set zoomOnClick(zoomOnClick) {\n        this._zoomOnClick = zoomOnClick;\n    }\n    set options(options) {\n        this._options = options;\n    }\n    ngOnInit() {\n        if (this._canInitialize) {\n            if (typeof MarkerClusterer !== 'function' &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('MarkerClusterer class not found, cannot construct a marker cluster. ' +\n                    'Please install the MarkerClustererPlus library: ' +\n                    'https://github.com/googlemaps/js-markerclustererplus');\n            }\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.markerClusterer = new MarkerClusterer(this._googleMap.googleMap, [], this._combineOptions());\n            });\n            this._assertInitialized();\n            this._eventManager.setTarget(this.markerClusterer);\n        }\n    }\n    ngAfterContentInit() {\n        if (this._canInitialize) {\n            this._watchForMarkerChanges();\n        }\n    }\n    ngOnChanges(changes) {\n        const { markerClusterer: clusterer, ariaLabelFn, _averageCenter, _batchSizeIE, _calculator, _styles, _clusterClass, _enableRetinaIcons, _gridSize, _ignoreHidden, _imageExtension, _imagePath, _imageSizes, _maxZoom, _minimumClusterSize, _title, _zIndex, _zoomOnClick, } = this;\n        if (clusterer) {\n            if (changes['options']) {\n                clusterer.setOptions(this._combineOptions());\n            }\n            if (changes['ariaLabelFn']) {\n                clusterer.ariaLabelFn = ariaLabelFn;\n            }\n            if (changes['averageCenter'] && _averageCenter !== undefined) {\n                clusterer.setAverageCenter(_averageCenter);\n            }\n            if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n                clusterer.setBatchSizeIE(_batchSizeIE);\n            }\n            if (changes['calculator'] && !!_calculator) {\n                clusterer.setCalculator(_calculator);\n            }\n            if (changes['clusterClass'] && _clusterClass !== undefined) {\n                clusterer.setClusterClass(_clusterClass);\n            }\n            if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n                clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n            }\n            if (changes['gridSize'] && _gridSize !== undefined) {\n                clusterer.setGridSize(_gridSize);\n            }\n            if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n                clusterer.setIgnoreHidden(_ignoreHidden);\n            }\n            if (changes['imageExtension'] && _imageExtension !== undefined) {\n                clusterer.setImageExtension(_imageExtension);\n            }\n            if (changes['imagePath'] && _imagePath !== undefined) {\n                clusterer.setImagePath(_imagePath);\n            }\n            if (changes['imageSizes'] && _imageSizes) {\n                clusterer.setImageSizes(_imageSizes);\n            }\n            if (changes['maxZoom'] && _maxZoom !== undefined) {\n                clusterer.setMaxZoom(_maxZoom);\n            }\n            if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n                clusterer.setMinimumClusterSize(_minimumClusterSize);\n            }\n            if (changes['styles'] && _styles) {\n                clusterer.setStyles(_styles);\n            }\n            if (changes['title'] && _title !== undefined) {\n                clusterer.setTitle(_title);\n            }\n            if (changes['zIndex'] && _zIndex !== undefined) {\n                clusterer.setZIndex(_zIndex);\n            }\n            if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n                clusterer.setZoomOnClick(_zoomOnClick);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this._eventManager.destroy();\n        if (this.markerClusterer) {\n            this.markerClusterer.setMap(null);\n        }\n    }\n    fitMapToMarkers(padding) {\n        this._assertInitialized();\n        this.markerClusterer.fitMapToMarkers(padding);\n    }\n    getAverageCenter() {\n        this._assertInitialized();\n        return this.markerClusterer.getAverageCenter();\n    }\n    getBatchSizeIE() {\n        this._assertInitialized();\n        return this.markerClusterer.getBatchSizeIE();\n    }\n    getCalculator() {\n        this._assertInitialized();\n        return this.markerClusterer.getCalculator();\n    }\n    getClusterClass() {\n        this._assertInitialized();\n        return this.markerClusterer.getClusterClass();\n    }\n    getClusters() {\n        this._assertInitialized();\n        return this.markerClusterer.getClusters();\n    }\n    getEnableRetinaIcons() {\n        this._assertInitialized();\n        return this.markerClusterer.getEnableRetinaIcons();\n    }\n    getGridSize() {\n        this._assertInitialized();\n        return this.markerClusterer.getGridSize();\n    }\n    getIgnoreHidden() {\n        this._assertInitialized();\n        return this.markerClusterer.getIgnoreHidden();\n    }\n    getImageExtension() {\n        this._assertInitialized();\n        return this.markerClusterer.getImageExtension();\n    }\n    getImagePath() {\n        this._assertInitialized();\n        return this.markerClusterer.getImagePath();\n    }\n    getImageSizes() {\n        this._assertInitialized();\n        return this.markerClusterer.getImageSizes();\n    }\n    getMaxZoom() {\n        this._assertInitialized();\n        return this.markerClusterer.getMaxZoom();\n    }\n    getMinimumClusterSize() {\n        this._assertInitialized();\n        return this.markerClusterer.getMinimumClusterSize();\n    }\n    getStyles() {\n        this._assertInitialized();\n        return this.markerClusterer.getStyles();\n    }\n    getTitle() {\n        this._assertInitialized();\n        return this.markerClusterer.getTitle();\n    }\n    getTotalClusters() {\n        this._assertInitialized();\n        return this.markerClusterer.getTotalClusters();\n    }\n    getTotalMarkers() {\n        this._assertInitialized();\n        return this.markerClusterer.getTotalMarkers();\n    }\n    getZIndex() {\n        this._assertInitialized();\n        return this.markerClusterer.getZIndex();\n    }\n    getZoomOnClick() {\n        this._assertInitialized();\n        return this.markerClusterer.getZoomOnClick();\n    }\n    _combineOptions() {\n        const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n        return {\n            ...options,\n            ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n            averageCenter: this._averageCenter ?? options.averageCenter,\n            batchSize: this.batchSize ?? options.batchSize,\n            batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n            calculator: this._calculator ?? options.calculator,\n            clusterClass: this._clusterClass ?? options.clusterClass,\n            enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n            gridSize: this._gridSize ?? options.gridSize,\n            ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n            imageExtension: this._imageExtension ?? options.imageExtension,\n            imagePath: this._imagePath ?? options.imagePath,\n            imageSizes: this._imageSizes ?? options.imageSizes,\n            maxZoom: this._maxZoom ?? options.maxZoom,\n            minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n            styles: this._styles ?? options.styles,\n            title: this._title ?? options.title,\n            zIndex: this._zIndex ?? options.zIndex,\n            zoomOnClick: this._zoomOnClick ?? options.zoomOnClick,\n        };\n    }\n    _watchForMarkerChanges() {\n        this._assertInitialized();\n        const initialMarkers = [];\n        for (const marker of this._getInternalMarkers(this._markers.toArray())) {\n            this._currentMarkers.add(marker);\n            initialMarkers.push(marker);\n        }\n        this.markerClusterer.addMarkers(initialMarkers);\n        this._markers.changes\n            .pipe(takeUntil(this._destroy))\n            .subscribe((markerComponents) => {\n            this._assertInitialized();\n            const newMarkers = new Set(this._getInternalMarkers(markerComponents));\n            const markersToAdd = [];\n            const markersToRemove = [];\n            for (const marker of Array.from(newMarkers)) {\n                if (!this._currentMarkers.has(marker)) {\n                    this._currentMarkers.add(marker);\n                    markersToAdd.push(marker);\n                }\n            }\n            for (const marker of Array.from(this._currentMarkers)) {\n                if (!newMarkers.has(marker)) {\n                    markersToRemove.push(marker);\n                }\n            }\n            this.markerClusterer.addMarkers(markersToAdd, true);\n            this.markerClusterer.removeMarkers(markersToRemove, true);\n            this.markerClusterer.repaint();\n            for (const marker of markersToRemove) {\n                this._currentMarkers.delete(marker);\n            }\n        });\n    }\n    _getInternalMarkers(markers) {\n        return markers\n            .filter(markerComponent => !!markerComponent.marker)\n            .map(markerComponent => markerComponent.marker);\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.markerClusterer) {\n                throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' +\n                    'Please wait for the MarkerClusterer to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapMarkerClusterer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapMarkerClusterer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMapMarkerClusterer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapMarkerClusterer, selector: \"map-marker-clusterer\", inputs: { ariaLabelFn: \"ariaLabelFn\", averageCenter: \"averageCenter\", batchSize: \"batchSize\", batchSizeIE: \"batchSizeIE\", calculator: \"calculator\", clusterClass: \"clusterClass\", enableRetinaIcons: \"enableRetinaIcons\", gridSize: \"gridSize\", ignoreHidden: \"ignoreHidden\", imageExtension: \"imageExtension\", imagePath: \"imagePath\", imageSizes: \"imageSizes\", maxZoom: \"maxZoom\", minimumClusterSize: \"minimumClusterSize\", styles: \"styles\", title: \"title\", zIndex: \"zIndex\", zoomOnClick: \"zoomOnClick\", options: \"options\" }, outputs: { clusteringbegin: \"clusteringbegin\", clusteringend: \"clusteringend\", clusterClick: \"clusterClick\" }, queries: [{ propertyName: \"_markers\", predicate: MapMarker, descendants: true }], exportAs: [\"mapMarkerClusterer\"], usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapMarkerClusterer, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'map-marker-clusterer',\n                    exportAs: 'mapMarkerClusterer',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { ariaLabelFn: [{\n                type: Input\n            }], averageCenter: [{\n                type: Input\n            }], batchSize: [{\n                type: Input\n            }], batchSizeIE: [{\n                type: Input\n            }], calculator: [{\n                type: Input\n            }], clusterClass: [{\n                type: Input\n            }], enableRetinaIcons: [{\n                type: Input\n            }], gridSize: [{\n                type: Input\n            }], ignoreHidden: [{\n                type: Input\n            }], imageExtension: [{\n                type: Input\n            }], imagePath: [{\n                type: Input\n            }], imageSizes: [{\n                type: Input\n            }], maxZoom: [{\n                type: Input\n            }], minimumClusterSize: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], zIndex: [{\n                type: Input\n            }], zoomOnClick: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], clusteringbegin: [{\n                type: Output\n            }], clusteringend: [{\n                type: Output\n            }], clusterClick: [{\n                type: Output\n            }], _markers: [{\n                type: ContentChildren,\n                args: [MapMarker, { descendants: true }]\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\nclass MapPolygon {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._paths = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n         */\n        this.polygonClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n         */\n        this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n         */\n        this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n         */\n        this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n         */\n        this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n         */\n        this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n         */\n        this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n         */\n        this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n         */\n        this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n         */\n        this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n         */\n        this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set paths(paths) {\n        this._paths.next(paths);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.polygon = new google.maps.Polygon(options);\n                });\n                this._assertInitialized();\n                this.polygon.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.polygon);\n            });\n            this._watchForOptionsChanges();\n            this._watchForPathChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.polygon) {\n            this.polygon.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.polygon.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.polygon.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n     */\n    getPath() {\n        this._assertInitialized();\n        return this.polygon.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n     */\n    getPaths() {\n        this._assertInitialized();\n        return this.polygon.getPaths();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.polygon.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n            const combinedOptions = {\n                ...options,\n                paths: paths || options.paths,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.polygon.setOptions(options);\n        });\n    }\n    _watchForPathChanges() {\n        this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n            if (paths) {\n                this._assertInitialized();\n                this.polygon.setPaths(paths);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.polygon) {\n                throw Error('Cannot interact with a Google Map Polygon before it has been ' +\n                    'initialized. Please wait for the Polygon to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapPolygon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapPolygon, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapPolygon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapPolygon, selector: \"map-polygon\", inputs: { options: \"options\", paths: \"paths\" }, outputs: { polygonClick: \"polygonClick\", polygonDblclick: \"polygonDblclick\", polygonDrag: \"polygonDrag\", polygonDragend: \"polygonDragend\", polygonDragstart: \"polygonDragstart\", polygonMousedown: \"polygonMousedown\", polygonMousemove: \"polygonMousemove\", polygonMouseout: \"polygonMouseout\", polygonMouseover: \"polygonMouseover\", polygonMouseup: \"polygonMouseup\", polygonRightclick: \"polygonRightclick\" }, exportAs: [\"mapPolygon\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapPolygon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-polygon',\n                    exportAs: 'mapPolygon',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], paths: [{\n                type: Input\n            }], polygonClick: [{\n                type: Output\n            }], polygonDblclick: [{\n                type: Output\n            }], polygonDrag: [{\n                type: Output\n            }], polygonDragend: [{\n                type: Output\n            }], polygonDragstart: [{\n                type: Output\n            }], polygonMousedown: [{\n                type: Output\n            }], polygonMousemove: [{\n                type: Output\n            }], polygonMouseout: [{\n                type: Output\n            }], polygonMouseover: [{\n                type: Output\n            }], polygonMouseup: [{\n                type: Output\n            }], polygonRightclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\nclass MapPolyline {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._path = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n         */\n        this.polylineClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n         */\n        this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n         */\n        this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n         */\n        this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n         */\n        this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n         */\n        this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n         */\n        this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n         */\n        this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n         */\n        this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n         */\n        this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n         */\n        this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set path(path) {\n        this._path.next(path);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => (this.polyline = new google.maps.Polyline(options)));\n                this._assertInitialized();\n                this.polyline.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.polyline);\n            });\n            this._watchForOptionsChanges();\n            this._watchForPathChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.polyline) {\n            this.polyline.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.polyline.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.polyline.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n     */\n    getPath() {\n        this._assertInitialized();\n        return this.polyline.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.polyline.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n            const combinedOptions = {\n                ...options,\n                path: path || options.path,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.polyline.setOptions(options);\n        });\n    }\n    _watchForPathChanges() {\n        this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n            if (path) {\n                this._assertInitialized();\n                this.polyline.setPath(path);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.polyline) {\n                throw Error('Cannot interact with a Google Map Polyline before it has been ' +\n                    'initialized. Please wait for the Polyline to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapPolyline.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapPolyline, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapPolyline.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapPolyline, selector: \"map-polyline\", inputs: { options: \"options\", path: \"path\" }, outputs: { polylineClick: \"polylineClick\", polylineDblclick: \"polylineDblclick\", polylineDrag: \"polylineDrag\", polylineDragend: \"polylineDragend\", polylineDragstart: \"polylineDragstart\", polylineMousedown: \"polylineMousedown\", polylineMousemove: \"polylineMousemove\", polylineMouseout: \"polylineMouseout\", polylineMouseover: \"polylineMouseover\", polylineMouseup: \"polylineMouseup\", polylineRightclick: \"polylineRightclick\" }, exportAs: [\"mapPolyline\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapPolyline, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-polyline',\n                    exportAs: 'mapPolyline',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], path: [{\n                type: Input\n            }], polylineClick: [{\n                type: Output\n            }], polylineDblclick: [{\n                type: Output\n            }], polylineDrag: [{\n                type: Output\n            }], polylineDragend: [{\n                type: Output\n            }], polylineDragstart: [{\n                type: Output\n            }], polylineMousedown: [{\n                type: Output\n            }], polylineMousemove: [{\n                type: Output\n            }], polylineMouseout: [{\n                type: Output\n            }], polylineMouseover: [{\n                type: Output\n            }], polylineMouseup: [{\n                type: Output\n            }], polylineRightclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\nclass MapRectangle {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._bounds = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n         */ this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n         */\n        this.rectangleClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n         */\n        this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n         */\n        this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n         */\n        this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n         */\n        this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n         */\n        this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n         */\n        this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n         */\n        this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n         */\n        this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n         */\n        this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n         */\n        this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set bounds(bounds) {\n        this._bounds.next(bounds);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.rectangle = new google.maps.Rectangle(options);\n                });\n                this._assertInitialized();\n                this.rectangle.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.rectangle);\n            });\n            this._watchForOptionsChanges();\n            this._watchForBoundsChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.rectangle) {\n            this.rectangle.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.rectangle.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.rectangle.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.rectangle.getEditable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.rectangle.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n            const combinedOptions = {\n                ...options,\n                bounds: bounds || options.bounds,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.rectangle.setOptions(options);\n        });\n    }\n    _watchForBoundsChanges() {\n        this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n            if (bounds) {\n                this._assertInitialized();\n                this.rectangle.setBounds(bounds);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.rectangle) {\n                throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n                    'Please wait for the Rectangle to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapRectangle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapRectangle, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapRectangle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapRectangle, selector: \"map-rectangle\", inputs: { options: \"options\", bounds: \"bounds\" }, outputs: { boundsChanged: \"boundsChanged\", rectangleClick: \"rectangleClick\", rectangleDblclick: \"rectangleDblclick\", rectangleDrag: \"rectangleDrag\", rectangleDragend: \"rectangleDragend\", rectangleDragstart: \"rectangleDragstart\", rectangleMousedown: \"rectangleMousedown\", rectangleMousemove: \"rectangleMousemove\", rectangleMouseout: \"rectangleMouseout\", rectangleMouseover: \"rectangleMouseover\", rectangleMouseup: \"rectangleMouseup\", rectangleRightclick: \"rectangleRightclick\" }, exportAs: [\"mapRectangle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapRectangle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-rectangle',\n                    exportAs: 'mapRectangle',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], boundsChanged: [{\n                type: Output\n            }], rectangleClick: [{\n                type: Output\n            }], rectangleDblclick: [{\n                type: Output\n            }], rectangleDrag: [{\n                type: Output\n            }], rectangleDragend: [{\n                type: Output\n            }], rectangleDragstart: [{\n                type: Output\n            }], rectangleMousedown: [{\n                type: Output\n            }], rectangleMousemove: [{\n                type: Output\n            }], rectangleMouseout: [{\n                type: Output\n            }], rectangleMouseover: [{\n                type: Output\n            }], rectangleMouseup: [{\n                type: Output\n            }], rectangleRightclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\nclass MapTrafficLayer {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._autoRefresh = new BehaviorSubject(true);\n        this._destroyed = new Subject();\n    }\n    /**\n     * Whether the traffic layer refreshes with updated information automatically.\n     */\n    set autoRefresh(autoRefresh) {\n        this._autoRefresh.next(autoRefresh);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                this._ngZone.runOutsideAngular(() => {\n                    this.trafficLayer = new google.maps.TrafficLayer(options);\n                });\n                this._assertInitialized();\n                this.trafficLayer.setMap(this._map.googleMap);\n            });\n            this._watchForAutoRefreshChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.trafficLayer) {\n            this.trafficLayer.setMap(null);\n        }\n    }\n    _combineOptions() {\n        return this._autoRefresh.pipe(map(autoRefresh => {\n            const combinedOptions = { autoRefresh };\n            return combinedOptions;\n        }));\n    }\n    _watchForAutoRefreshChanges() {\n        this._combineOptions()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(options => {\n            this._assertInitialized();\n            this.trafficLayer.setOptions(options);\n        });\n    }\n    _assertInitialized() {\n        if (!this._map.googleMap) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n        if (!this.trafficLayer) {\n            throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n                'Please wait for the Traffic Layer to load before trying to interact with it.');\n        }\n    }\n}\nMapTrafficLayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapTrafficLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapTrafficLayer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapTrafficLayer, selector: \"map-traffic-layer\", inputs: { autoRefresh: \"autoRefresh\" }, exportAs: [\"mapTrafficLayer\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapTrafficLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-traffic-layer',\n                    exportAs: 'mapTrafficLayer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { autoRefresh: [{\n                type: Input\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\nclass MapTransitLayer extends MapBaseLayer {\n    _initializeObject() {\n        this.transitLayer = new google.maps.TransitLayer();\n    }\n    _setMap() {\n        this._assertLayerInitialized();\n        this.transitLayer.setMap(this._map.googleMap);\n    }\n    _unsetMap() {\n        if (this.transitLayer) {\n            this.transitLayer.setMap(null);\n        }\n    }\n    _assertLayerInitialized() {\n        if (!this.transitLayer) {\n            throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n                'Please wait for the Transit Layer to load before trying to interact with it.');\n        }\n    }\n}\nMapTransitLayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapTransitLayer, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMapTransitLayer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapTransitLayer, selector: \"map-transit-layer\", exportAs: [\"mapTransitLayer\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapTransitLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-transit-layer',\n                    exportAs: 'mapTransitLayer',\n                }]\n        }] });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\nclass MapHeatmapLayer {\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n    }\n    /**\n     * Data shown on the heatmap.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n     */\n    set data(data) {\n        this._data = data;\n    }\n    /**\n     * Options used to configure the heatmap. See:\n     * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            if (!window.google?.maps?.visualization && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' +\n                    'Please install the Google Maps JavaScript API with the \"visualization\" library: ' +\n                    'https://developers.google.com/maps/documentation/javascript/visualization');\n            }\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.heatmap = new google.maps.visualization.HeatmapLayer(this._combineOptions());\n            });\n            this._assertInitialized();\n            this.heatmap.setMap(this._googleMap.googleMap);\n        }\n    }\n    ngOnChanges(changes) {\n        const { _data, heatmap } = this;\n        if (heatmap) {\n            if (changes['options']) {\n                heatmap.setOptions(this._combineOptions());\n            }\n            if (changes['data'] && _data !== undefined) {\n                heatmap.setData(this._normalizeData(_data));\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (this.heatmap) {\n            this.heatmap.setMap(null);\n        }\n    }\n    /**\n     * Gets the data that is currently shown on the heatmap.\n     * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n     */\n    getData() {\n        this._assertInitialized();\n        return this.heatmap.getData();\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        const options = this._options || {};\n        return {\n            ...options,\n            data: this._normalizeData(this._data || options.data || []),\n            map: this._googleMap.googleMap,\n        };\n    }\n    /**\n     * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n     * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n     * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n     * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n     * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n     * convert it to a `LatLng` object before passing it off to Google Maps.\n     */\n    _normalizeData(data) {\n        const result = [];\n        data.forEach(item => {\n            result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n        });\n        return result;\n    }\n    /** Asserts that the heatmap object has been initialized. */\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.heatmap) {\n                throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' +\n                    'initialized. Please wait for the heatmap to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapHeatmapLayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapHeatmapLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapHeatmapLayer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MapHeatmapLayer, selector: \"map-heatmap-layer\", inputs: { data: \"data\", options: \"options\" }, exportAs: [\"mapHeatmapLayer\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapHeatmapLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-heatmap-layer',\n                    exportAs: 'mapHeatmapLayer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { data: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }] } });\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value) {\n    return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst COMPONENTS = [\n    GoogleMap,\n    MapBaseLayer,\n    MapBicyclingLayer,\n    MapCircle,\n    MapDirectionsRenderer,\n    MapGroundOverlay,\n    MapInfoWindow,\n    MapKmlLayer,\n    MapMarker,\n    MapMarkerClusterer,\n    MapPolygon,\n    MapPolyline,\n    MapRectangle,\n    MapTrafficLayer,\n    MapTransitLayer,\n    MapHeatmapLayer,\n];\nclass GoogleMapsModule {\n}\nGoogleMapsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GoogleMapsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGoogleMapsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: GoogleMapsModule, declarations: [GoogleMap,\n        MapBaseLayer,\n        MapBicyclingLayer,\n        MapCircle,\n        MapDirectionsRenderer,\n        MapGroundOverlay,\n        MapInfoWindow,\n        MapKmlLayer,\n        MapMarker,\n        MapMarkerClusterer,\n        MapPolygon,\n        MapPolyline,\n        MapRectangle,\n        MapTrafficLayer,\n        MapTransitLayer,\n        MapHeatmapLayer], exports: [GoogleMap,\n        MapBaseLayer,\n        MapBicyclingLayer,\n        MapCircle,\n        MapDirectionsRenderer,\n        MapGroundOverlay,\n        MapInfoWindow,\n        MapKmlLayer,\n        MapMarker,\n        MapMarkerClusterer,\n        MapPolygon,\n        MapPolyline,\n        MapRectangle,\n        MapTrafficLayer,\n        MapTransitLayer,\n        MapHeatmapLayer] });\nGoogleMapsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GoogleMapsModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GoogleMapsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: COMPONENTS,\n                    exports: COMPONENTS,\n                }]\n        }] });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\nclass MapDirectionsService {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsService.route\n     */\n    route(request) {\n        return new Observable(observer => {\n            // Initialize the `DirectionsService` lazily since the Google Maps API may\n            // not have been loaded when the provider is instantiated.\n            if (!this._directionsService) {\n                this._directionsService = new google.maps.DirectionsService();\n            }\n            this._directionsService.route(request, (result, status) => {\n                this._ngZone.run(() => {\n                    observer.next({ result: result || undefined, status });\n                    observer.complete();\n                });\n            });\n        });\n    }\n}\nMapDirectionsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapDirectionsService, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nMapDirectionsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapDirectionsService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapDirectionsService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\nclass MapGeocoder {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n     */\n    geocode(request) {\n        return new Observable(observer => {\n            // Initialize the `Geocoder` lazily since the Google Maps API may\n            // not have been loaded when the provider is instantiated.\n            if (!this._geocoder) {\n                this._geocoder = new google.maps.Geocoder();\n            }\n            this._geocoder.geocode(request, (results, status) => {\n                this._ngZone.run(() => {\n                    observer.next({ results: results || [], status });\n                    observer.complete();\n                });\n            });\n        });\n    }\n}\nMapGeocoder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapGeocoder, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nMapGeocoder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapGeocoder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MapGeocoder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GoogleMap, GoogleMapsModule, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapEventManager, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}